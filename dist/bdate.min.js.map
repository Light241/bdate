{"version":3,"sources":["bdate.js"],"names":["angular","module","directive","$document","$filter","restrict","templateUrl","scope","bModel","bSource","bStartSource","bEndSource","bRange","bRootClasses","bInputClasses","bButtonClasses","bPopupClasses","bMonthNames","bDaysNames","placeholder","bRefresh","bStartRefresh","bEndRefresh","controller","$scope","getFormattedDate","state","isDataReady","data","date","$watch","dmy","datetime","Date","year","month","day","getTime","format","newVal","oldVal","equals","popupResult","link","elem","processClick","viewed","model","event","clickedElem","isOpen","isOutsideClick","popupElem","popup","target","contains","$apply","hidePopup","clear","togglePopup","bRefreshTest","m","y","on","replace","popupState","popupSource","popupRefresh","console","log","selectDate","isDayInSelectedMonth","refreshSelectedData","goPrevYear","selected","isStart","error","num","isFirstYear","goPrevMonth","december","isFirstMonth","goNextMonth","january","isEnd","isLastMonth","goNextYear","isLastYear","isSelectedDay","getTodayDateTime","today","goToYear","popupStartSource","popupEndSource","popupStartRefresh","popupEndRefresh","getSource","startDate","endDate","isStartPopup","run","$templateCache","put"],"mappings":"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","file":"bdate.min.js","sourcesContent":["angular.module('bdate', ['bdate.popup', 'bdate.popup.ranged', 'bdate.templates']).directive('bdatepicker', ['$document', '$filter', function($document, $filter) {\n  return {\n    restrict: 'E',\n    templateUrl: 'bdate.html',\n    scope: {\n      bModel: '=',\n      bSource: '=?',\n      bStartSource: '=?',\n      bEndSource: '=?',\n      bRange: '=?',\n      bRootClasses: '@?',\n      bInputClasses: '@?',\n      bButtonClasses: '@?',\n      bPopupClasses: '@?',\n      bMonthNames: '=?',\n      bDaysNames: '=?',\n      placeholder: '@?',\n      bRefresh: \"&?\",\n      bStartRefresh: \"&?\",\n      bEndRefresh: \"&?\"\n    },\n    controller: ['$scope', function($scope) {\n      var getFormattedDate;\n      $scope.state = {\n        isDataReady: false\n      };\n      $scope.data = {\n        date: null\n      };\n      $scope.$watch('bSource', function() {\n        return $scope.isDataReady = true;\n      }, true);\n      getFormattedDate = function(dmy) {\n        var datetime;\n        datetime = new Date(dmy.year, dmy.month - 1, dmy.day).getTime();\n        return $filter('date')(datetime, $scope.bSource.format);\n      };\n      return $scope.$watch('popupResult', function(newVal, oldVal) {\n        if (newVal === oldVal) {\n          return;\n        }\n        if (!newVal) {\n          return;\n        }\n        if (angular.equals({}, newVal)) {\n          return;\n        }\n        return $scope.bModel = getFormattedDate($scope.popupResult);\n      }, true);\n    }],\n    link: function(scope, elem) {\n      var processClick;\n      scope.date = {\n        viewed: '',\n        model: {}\n      };\n      processClick = function(event) {\n        var clickedElem, isOpen, isOutsideClick, popupElem;\n        isOpen = scope.popup.state.isOpen;\n        clickedElem = event.target;\n        popupElem = elem;\n        isOutsideClick = (popupElem !== clickedElem) && !(popupElem[0].contains(clickedElem));\n        if (isOpen && isOutsideClick) {\n          return scope.$apply(function() {\n            return scope.popup.hidePopup();\n          });\n        }\n      };\n      scope.clear = function() {\n        scope.bModel = null;\n        return scope.popupResult = null;\n      };\n      scope.popup = {\n        state: {\n          isOpen: false\n        },\n        togglePopup: function() {\n          if (!scope.isDataReady) {\n            return;\n          }\n          return scope.popup.state.isOpen = !scope.popup.state.isOpen;\n        },\n        hidePopup: function() {\n          return scope.popup.state.isOpen = false;\n        }\n      };\n      (function() {\n        return scope.bRefresh();\n      })();\n      scope.bRefreshTest = function(m, y) {\n        return scope.bRefresh({\n          m: m,\n          y: y\n        });\n      };\n      return $document.on('click', processClick);\n    }\n  };\n}]);\n\nangular.module('bdate.popup', ['bdate.templates']).directive('bdatePopup', function() {\n  return {\n    restrict: 'E',\n    replace: true,\n    templateUrl: 'popup.html',\n    scope: {\n      popupState: '=',\n      popupSource: '=',\n      popupResult: '=',\n      popupRefresh: \"&?\"\n    },\n    link: function(scope) {\n      scope.$watch('popupSource', function() {\n        return console.log(scope.popupState);\n      }, true);\n      scope.popup = {\n        hidePopup: function() {\n          return scope.popupState.isOpen = false;\n        },\n        selectDate: function(date) {\n          scope.popupResult = date;\n          scope.popup.hidePopup();\n          if (!scope.popup.isDayInSelectedMonth(date)) {\n            return scope.popup.refreshSelectedData(date.month, date.year);\n          }\n        },\n        goPrevYear: function() {\n          var month, year;\n          if (!scope.popupSource.selected || !scope.popupSource.selected.year) {\n            return;\n          }\n          if (scope.popupSource.selected.year.isStart) {\n            console.error('error');\n            return false;\n          }\n          year = scope.popupSource.selected.year.num - 1;\n          month = scope.popupSource.selected.month.num;\n          return scope.popup.refreshSelectedData(month, year);\n        },\n        isFirstYear: function() {\n          if (!scope.popupSource || !scope.popupSource.selected) {\n            return;\n          }\n          return scope.popupSource.selected.year.isStart;\n        },\n        goPrevMonth: function() {\n          var december, month, year;\n          if (!scope.popupSource.selected || !scope.popupSource.selected.year) {\n            return;\n          }\n          if (scope.popupSource.selected.month.isStart && scope.popupSource.selected.year.isStart) {\n            console.error('error');\n            return false;\n          }\n          december = 12;\n          month = scope.popupSource.selected.month.num;\n          if (scope.popupSource.selected.month.isStart) {\n            year = scope.popupSource.selected.year.num - 1;\n            month = december;\n          } else if (scope.popupSource.selected.month.isStart && scope.popupSource.selected.year.isStart) {\n            console.error('error');\n            return false;\n          } else {\n            year = scope.popupSource.selected.year.num;\n            month = scope.popupSource.selected.month.num - 1;\n          }\n          return scope.popup.refreshSelectedData(month, year);\n        },\n        isFirstMonth: function() {\n          if (!scope.popupSource || !scope.popupSource.selected) {\n            return;\n          }\n          return scope.popupSource.selected.month.isStart;\n        },\n        goNextMonth: function() {\n          var january, month, year;\n          if (!scope.popupSource.selected || !scope.popupSource.selected.year) {\n            return;\n          }\n          if (scope.popupSource.selected.month.isEnd && scope.popupSource.selected.year.isEnd) {\n            console.error('error');\n            return false;\n          }\n          january = 1;\n          month = scope.popupSource.selected.month.num;\n          if (scope.popupSource.selected.month.isEnd) {\n            year = scope.popupSource.selected.year.num + 1;\n            month = january;\n          } else if (scope.popupSource.selected.month.isEnd && scope.popupSource.selected.year.isEnd) {\n            console.error('error');\n            return false;\n          } else {\n            year = scope.popupSource.selected.year.num;\n            month = scope.popupSource.selected.month.num + 1;\n          }\n          return scope.popup.refreshSelectedData(month, year);\n        },\n        isLastMonth: function() {\n          if (!scope.popupSource || !scope.popupSource.selected) {\n            return;\n          }\n          return scope.popupSource.selected.month.isEnd;\n        },\n        goNextYear: function() {\n          var month, year;\n          if (!scope.popupSource.selected || !scope.popupSource.selected.year) {\n            return;\n          }\n          if (scope.popupSource.selected.year.isEnd) {\n            console.error('error');\n            return false;\n          }\n          year = scope.popupSource.selected.year.num + 1;\n          month = scope.popupSource.selected.month.num;\n          return scope.popup.refreshSelectedData(month, year);\n        },\n        isLastYear: function() {\n          if (!scope.popupSource || !scope.popupSource.selected) {\n            return;\n          }\n          return scope.popupSource.selected.year.isEnd;\n        },\n        isSelectedDay: function(date) {\n          if (!scope.popupResult || !scope.popupResult.day) {\n            return;\n          }\n          return (date.day === scope.popupResult.day) && (date.month === scope.popupResult.month) && (date.year === scope.popupResult.year);\n        },\n        getTodayDateTime: function() {\n          var today;\n          if (!scope.popupSource || !scope.popupSource.today) {\n            return;\n          }\n          today = scope.popupSource.today;\n          return new Date(today.year, today.month - 1, today.day).getTime();\n        },\n        isDayInSelectedMonth: function(date) {\n          return (date.month === scope.popupSource.selected.month.num) && (date.year === scope.popupSource.selected.year.num);\n        },\n        goToYear: function() {\n          var month, year;\n          year = scope.popupSource.selected.year.num;\n          month = scope.popupSource.selected.month.num;\n          return scope.popup.refreshSelectedData(month, year);\n        },\n        refreshSelectedData: function(month, year) {\n          return scope.popupRefresh({\n            m: month,\n            y: year\n          });\n        }\n      };\n      return scope.$watch('popupSource', function() {\n        return scope.isDataReady = true;\n      }, true);\n    }\n  };\n});\n\nangular.module('bdate.popup.ranged', ['bdate.templates']).directive('bdateRangePopup', function() {\n  return {\n    restrict: 'E',\n    replace: true,\n    templateUrl: 'range-popup.html',\n    scope: {\n      popupState: '=',\n      popupStartSource: '=',\n      popupEndSource: '=',\n      popupResult: '=',\n      popupStartRefresh: \"&?\",\n      popupEndRefresh: \"&?\"\n    },\n    link: function(scope) {\n      var getSource;\n      scope.data = {\n        startDate: '',\n        endDate: ''\n      };\n      getSource = function(isStartPopup) {\n        if (isStartPopup) {\n          return scope.popupStartSource;\n        } else {\n          return scope.popupEndSource;\n        }\n      };\n      scope.popup = {\n        hidePopup: function() {\n          return scope.popupState.isOpen = false;\n        },\n        selectDate: function(isStartPopup, date) {\n          scope.popupResult = date;\n          scope.popup.hidePopup();\n          if (!scope.popup.isDayInSelectedMonth(date)) {\n            return scope.popup.refreshSelectedData(date.month, date.year);\n          }\n        },\n        goPrevYear: function(isStartPopup) {\n          var month, popupSource, year;\n          popupSource = getSource(isStartPopup);\n          if (!popupSource.selected || !popupSource.selected.year) {\n            return;\n          }\n          if (popupSource.selected.year.isStart) {\n            console.error('error');\n            return false;\n          }\n          year = popupSource.selected.year.num - 1;\n          month = popupSource.selected.month.num;\n          return scope.popup.refreshSelectedData(month, year);\n        },\n        isFirstYear: function(isStartPopup) {\n          var popupSource;\n          popupSource = getSource(isStartPopup);\n          if (!popupSource || !popupSource.selected) {\n            return;\n          }\n          return popupSource.selected.year.isStart;\n        },\n        goPrevMonth: function(isStartPopup) {\n          var december, month, popupSource, year;\n          popupSource = getSource(isStartPopup);\n          if (!popupSource.selected || !popupSource.selected.year) {\n            return;\n          }\n          if (popupSource.selected.month.isStart && popupSource.selected.year.isStart) {\n            console.error('error');\n            return false;\n          }\n          december = 12;\n          month = popupSource.selected.month.num;\n          if (popupSource.selected.month.isStart) {\n            year = popupSource.selected.year.num - 1;\n            month = december;\n          } else if (popupSource.selected.month.isStart && popupSource.selected.year.isStart) {\n            console.error('error');\n            return false;\n          } else {\n            year = popupSource.selected.year.num;\n            month = popupSource.selected.month.num - 1;\n          }\n          return scope.popup.refreshSelectedData(month, year);\n        },\n        isFirstMonth: function(isStartPopup) {\n          var popupSource;\n          popupSource = getSource(isStartPopup);\n          if (!popupSource || !popupSource.selected) {\n            return;\n          }\n          return popupSource.selected.month.isStart;\n        },\n        goNextMonth: function(isStartPopup) {\n          var january, month, popupSource, year;\n          popupSource = getSource(isStartPopup);\n          if (!popupSource.selected || !popupSource.selected.year) {\n            return;\n          }\n          if (popupSource.selected.month.isEnd && popupSource.selected.year.isEnd) {\n            console.error('error');\n            return false;\n          }\n          january = 1;\n          month = popupSource.selected.month.num;\n          if (popupSource.selected.month.isEnd) {\n            year = popupSource.selected.year.num + 1;\n            month = january;\n          } else if (popupSource.selected.month.isEnd && popupSource.selected.year.isEnd) {\n            console.error('error');\n            return false;\n          } else {\n            year = popupSource.selected.year.num;\n            month = popupSource.selected.month.num + 1;\n          }\n          return scope.popup.refreshSelectedData(month, year);\n        },\n        isLastMonth: function(isStartPopup) {\n          var popupSource;\n          popupSource = getSource(isStartPopup);\n          if (!popupSource || !popupSource.selected) {\n            return;\n          }\n          return popupSource.selected.month.isEnd;\n        },\n        goNextYear: function(isStartPopup) {\n          var month, popupSource, year;\n          popupSource = getSource(isStartPopup);\n          if (!popupSource.selected || !popupSource.selected.year) {\n            return;\n          }\n          if (popupSource.selected.year.isEnd) {\n            console.error('error');\n            return false;\n          }\n          year = popupSource.selected.year.num + 1;\n          month = popupSource.selected.month.num;\n          return scope.popup.refreshSelectedData(month, year);\n        },\n        isLastYear: function(isStartPopup) {\n          var popupSource;\n          popupSource = getSource(isStartPopup);\n          if (!popupSource || !popupSource.selected) {\n            return;\n          }\n          return popupSource.selected.year.isEnd;\n        },\n        isSelectedDay: function(date) {\n          if (!scope.popupResult || !scope.popupResult.day) {\n            return;\n          }\n          return (date.day === scope.popupResult.day) && (date.month === scope.popupResult.month) && (date.year === scope.popupResult.year);\n        },\n        getTodayDateTime: function(isStartPopup) {\n          var popupSource, today;\n          popupSource = getSource(isStartPopup);\n          if (!popupSource || !popupSource.today) {\n            return;\n          }\n          today = popupSource.today;\n          return new Date(today.year, today.month - 1, today.day).getTime();\n        },\n        isDayInSelectedMonth: function(isStartPopup, date) {\n          var popupSource;\n          popupSource = getSource(isStartPopup);\n          return (date.month === popupSource.selected.month.num) && (date.year === popupSource.selected.year.num);\n        },\n        goToYear: function(isStartPopup) {\n          var month, popupSource, year;\n          popupSource = getSource(isStartPopup);\n          year = popupSource.selected.year.num;\n          month = popupSource.selected.month.num;\n          return scope.popup.refreshSelectedData(month, year);\n        },\n        refreshSelectedData: function(month, year) {\n          return scope.popupRefresh({\n            m: month,\n            y: year\n          });\n        }\n      };\n      return scope.$watch('popupSource', function() {\n        return scope.isDataReady = true;\n      }, true);\n    }\n  };\n});\n\nangular.module(\"bdate.templates\", []).run([\"$templateCache\", function($templateCache) {$templateCache.put(\"bdate.html\",\"<div ng-class=\\\"{b_datepicker_in_progress: !isDataReady}\\\" class=\\\"b_datepicker_root {{::bRootClasses}}\\\"><input type=text ng-model=bModel placeholder={{placeholder}} ng-click=popup.togglePopup() ng-disabled=!isDataReady readonly=readonly class=\\\"b_datepicker_input {{::bInputClasses}}\\\"><button type=button ng-click=clear() class=\\\"b_clear_btn {{::bButtonClasses}}\\\">&times;</button><button type=button ng-click=popup.togglePopup() ng-disabled=!isDataReady class=\\\"b_datepicker_button b_calendar_btn {{::bButtonClasses}}\\\">&nbsp;</button><bdate-popup popup-state=popup.state popup-source=bSource popup-result=popupResult popup-refresh=\\\"bRefreshTest(m, y)\\\" ng-if=!bRange class={{::bPopupClasses}}></bdate-popup><bdate-range-popup popup-state=popup.state popup-source=bSource popup-result=popupResult popup-refresh=\\\"bRefreshTest(m, y)\\\" ng-if=bRange class={{::bPopupClasses}}></bdate-range-popup></div>\");\n$templateCache.put(\"popup.html\",\"<div ng-show=popupState.isOpen class=b_popup><div class=b_popup_controls><div class=b_btn_prev_container><button type=button ng-click=popup.goPrevYear() ng-disabled=popup.isFirstYear() class=\\\"b_popup_btn b_btn_prev\\\">&#9664; &#9664;</button><button type=button ng-click=popup.goPrevMonth() ng-disabled=\\\"popup.isFirstMonth() &amp;&amp; popup.isFirstYear()\\\" class=\\\"b_popup_btn b_btn_prev\\\">&#9664;</button></div><div ng-bind=popupSource.selected.month.name class=b_popup_month></div>&nbsp;<select ng-model=popupSource.selected.year.num ng-options=\\\"year for year in popupSource.years\\\" ng-init=\\\"year = popupSource.selected.year.num\\\" ng-change=popup.goToYear() class=b_popup_year></select><div class=b_btn_next_container><button type=button ng-click=popup.goNextMonth() ng-disabled=\\\"popup.isLastMonth() &amp;&amp; popup.isLastYear()\\\" class=\\\"b_popup_btn b_btn_next\\\">&#9654;</button><button type=button ng-click=popup.goNextYear() ng-disabled=popup.isLastYear() class=\\\"b_popup_btn b_btn_next\\\">&#9654; &#9654;</button></div></div><table class=b_popup_days><tr><td ng-repeat=\\\"dayOfWeek in ::popupSource.week\\\" class=b_popup_day_of_week><span ng-bind=::dayOfWeek></span></td></tr></table><table class=b_popup_weeks><tr class=b_popup_week><td ng-repeat=\\\"date in popupSource.selected.dates track by $index\\\" ng-class=\\\"{b_popup_today_day_container: date.isToday}\\\" class=b_popup_day><button type=button ng-bind=date.day ng-click=popup.selectDate(date) ng-disabled=date.isDisabled ng-class=\\\"{b_popup_day_in_selected_month: popup.isDayInSelectedMonth(date), b_popup_today_day: date.isToday, b_popup_selected_day: popup.isSelectedDay(date)}\\\" class=b_popup_day_btn></button></td></tr></table><div ng-show=popupSource.today class=b_popup_today><button type=button ng-bind=\\\"popup.getTodayDateTime() | date:popupSource.format\\\" ng-click=popup.selectDate(popupSource.today) class=b_popup_today_btn></button></div></div>\");\n$templateCache.put(\"range-popup.html\",\"<div ng-show=popupState.isOpen class=b_range_popup_back><div class=\\\"b_popup b_range_popup b_range_popup_start\\\"><div class=b_popup_controls><div class=b_btn_prev_container><button type=button ng-click=popup.goPrevYear(true) ng-disabled=popup.isFirstYear(true) class=\\\"b_popup_btn b_btn_prev\\\">&#9664; &#9664;</button><button type=button ng-click=popup.goPrevMonth(true) ng-disabled=\\\"popup.isFirstMonth(true) &amp;&amp; popup.isFirstYear(true)\\\" class=\\\"b_popup_btn b_btn_prev\\\">&#9664;</button></div><div ng-bind=popupSource.selected.month.name class=b_popup_month></div>&nbsp;<select ng-model=popupSource.selected.year.num ng-options=\\\"year for year in popupSource.years\\\" ng-init=\\\"year = popupSource.selected.year.num\\\" ng-change=popup.goToYear(true) class=b_popup_year></select><div class=b_btn_next_container><button type=button ng-click=popup.goNextMonth(true) ng-disabled=\\\"popup.isLastMonth(true) &amp;&amp; popup.isLastYear(true)\\\" class=\\\"b_popup_btn b_btn_next\\\">&#9654;</button><button type=button ng-click=popup.goNextYear(true) ng-disabled=popup.isLastYear(true) class=\\\"b_popup_btn b_btn_next\\\">&#9654; &#9654;</button></div></div><table class=b_popup_days><tr><td ng-repeat=\\\"dayOfWeek in ::popupSource.week\\\" class=b_popup_day_of_week><span ng-bind=::dayOfWeek></span></td></tr></table><table class=b_popup_weeks><tr class=b_popup_week><td ng-repeat=\\\"date in popupSource.selected.dates track by $index\\\" ng-class=\\\"{b_popup_today_day_container: date.isToday}\\\" class=b_popup_day><button type=button ng-bind=date.day ng-click=\\\"popup.selectDate(true, date)\\\" ng-disabled=date.isDisabled ng-class=\\\"{b_popup_day_in_selected_month: popup.isDayInSelectedMonth(true, date), b_popup_today_day: date.isToday, b_popup_selected_day: popup.isSelectedDay(date)}\\\" class=b_popup_day_btn></button></td></tr></table><div ng-show=popupSource.today class=b_popup_today><button type=button ng-bind=\\\"popup.getTodayDateTime() | date:popupSource.format\\\" ng-click=\\\"popup.selectDate(true, popupSource.today)\\\" class=b_popup_today_btn></button></div></div><div class=\\\"b_popup b_range_popup b_range_popup_end\\\"><div class=b_popup_controls><div class=b_btn_prev_container><button type=button ng-click=popup.goPrevYear(false) ng-disabled=popup.isFirstYear(false) class=\\\"b_popup_btn b_btn_prev\\\">&#9664; &#9664;</button><button type=button ng-click=popup.goPrevMonth(false) ng-disabled=\\\"popup.isFirstMonth(false) &amp;&amp; popup.isFirstYear(false)\\\" class=\\\"b_popup_btn b_btn_prev\\\">&#9664;</button></div><div ng-bind=popupSource.selected.month.name class=b_popup_month></div>&nbsp;<select ng-model=popupSource.selected.year.num ng-options=\\\"year for year in popupSource.years\\\" ng-init=\\\"year = popupSource.selected.year.num\\\" ng-change=popup.goToYear(false) class=b_popup_year></select><div class=b_btn_next_container><button type=button ng-click=popup.goNextMonth(false) ng-disabled=\\\"popup.isLastMonth(false) &amp;&amp; popup.isLastYear(false)\\\" class=\\\"b_popup_btn b_btn_next\\\">&#9654;</button><button type=button ng-click=popup.goNextYear(false) ng-disabled=popup.isLastYear(false) class=\\\"b_popup_btn b_btn_next\\\">&#9654; &#9654;</button></div></div><table class=b_popup_days><tr><td ng-repeat=\\\"dayOfWeek in ::popupSource.week\\\" class=b_popup_day_of_week><span ng-bind=::dayOfWeek></span></td></tr></table><table class=b_popup_weeks><tr class=b_popup_week><td ng-repeat=\\\"date in popupSource.selected.dates track by $index\\\" ng-class=\\\"{b_popup_today_day_container: date.isToday}\\\" class=b_popup_day><button type=button ng-bind=date.day ng-click=popup.selectDate(date) ng-disabled=date.isDisabled ng-class=\\\"{b_popup_day_in_selected_month: popup.isDayInSelectedMonth(date), b_popup_today_day: date.isToday, b_popup_selected_day: popup.isSelectedDay(date)}\\\" class=b_popup_day_btn></button></td></tr></table><div ng-show=popupSource.today class=b_popup_today><button type=button ng-bind=\\\"popup.getTodayDateTime(false) | date:popupSource.format\\\" class=b_popup_today_btn></button></div></div><button type=button ng-click=popup.selectRangedDate()>Ok</button></div>\");}]);"],"sourceRoot":"/source/"}