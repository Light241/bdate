{"version":3,"sources":["bdate.js"],"names":["angular","module","directive","$filter","bDataFactory","bDateUtils","$document","$interval","restrict","replace","templateUrl","scope","bModel","bSource","bRootId","bInputId","bPopupId","bRootClasses","bInputClasses","bButtonClasses","bPopupClasses","bMonthNames","bDaysNames","controller","$scope","_generateRandomId","setLocalizedData","Math","random","toString","substring","dateStoreId","isDataReady","$watch","isDataValid","setData","setMonthNames","setDaysNames","link","elem","doNotUpdateModelTwice","externalLoadInterval","processClick","setModelFromExternal","date","viewed","model","bModelDate","isEmptyModel","isSameDate","stringToDate","data","format","delimiter","isDate","day","getDate","month","getMonth","year","getFullYear","cancel","newVal","oldVal","dateTime","formattedDate","equals","Date","getTime","event","clickedElem","isOpen","isOutsideClick","popupElem","popup","state","target","contains","$apply","hidePopup","on","togglePopup","factory","MESSAGES","exports","daysNames","name","short","daysNamesArr","isDaysNamesValid","console","error","daysNameNotValid","isArray","isObject","length","monthNames",1,2,3,4,5,6,7,8,9,10,11,12,"monthNamesObj","isMonthNamesValid","monthNameNotValid","Object","keys","storeId","invalidParams","today","years","source","JSON","parse","stringify","sourceDataNotValid","constant","errorOnChangeMonthOrYear","dateNotReady","yearNotExist","popupState","dateModel","getPositionInArray","setInitViewedDate","selectDate","setDateModel","dateSource","viewedYearNumberInArr","sourceCheckers","isMonthExist","getFirstYear","getFirstMonth","setViewedDate","yearsList","getYearsAsFlatArr","selectViewedYear","val","arr","i","setFormat","viewedDate","yearNum","monthNum","dayNum","ref","first","last","number","count","daysTotal","days_total","startDay","start_day","getMonthName","days","getDaysArr","daysOfWeek","get","getShorts","getDaysOfWeekShorts","setToday","_getPrevMonthTailDaysArr","isPrevMonthExist","prevMonthDate","prevMonthDaysCount","result","getPrevMonthObj","unshift","isOtherMonth","isLocked","_getNextMonthTailDaysArr","daysCount","daysArr","daysInWeek","expectedWeeksCount","isNextMonthExist","nextMonthDate","ceil","floor","getNextMonthObj","push","_getMonthDaysArr","_markToday","isToday","currentMonthDaysArr","nextMonthTailDaysArr","prevMonthTailDaysArr","concat","goNextMonth","isForward","nextObj","getNextAvailableMonth","goNextYear","getNextAvailableYear","goToYear","isYearExist","init","makeDateModel","datetime","dateStr","dateItems","dayIndex","formatItems","formatLowerCase","monthIndex","yearIndex","toLowerCase","split","indexOf","isValidDate","isNaN","curMonthNum","isFirstMonth","isFirstYear","lastMonthOfPrevYearNum","prevMonthNum","prevYearNum","getLastMonth","firstMonthOfNextYearNum","isLastMonth","isLastYear","nextMonthNum","nextYearNum","getYear","getLastYear","run","$templateCache","put"],"mappings":"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","file":"bdate.min.js","sourcesContent":["angular.module('bdate.datepicker', ['bdate.popup', 'bdate.data', 'bdate.templates']).directive('bdatepicker', ['$filter', 'bDataFactory', 'bDateUtils', '$document', '$interval', function($filter, bDataFactory, bDateUtils, $document, $interval) {\n  return {\n    restrict: 'E',\n    replace: true,\n    templateUrl: 'bdate.html',\n    scope: {\n      bModel: '=',\n      bSource: '=',\n      bRootId: '@?',\n      bInputId: '@?',\n      bPopupId: '@?',\n      bRootClasses: '@?',\n      bInputClasses: '@?',\n      bButtonClasses: '@?',\n      bPopupClasses: '@?',\n      bMonthNames: '=?',\n      bDaysNames: '=?'\n    },\n    controller: ['$scope', function($scope) {\n      var _generateRandomId, setLocalizedData;\n      _generateRandomId = function() {\n        return Math.random().toString(36).substring(12);\n      };\n      $scope.dateStoreId = _generateRandomId();\n      $scope.isDataReady = false;\n      $scope.$watch('bSource', function() {\n        if (bDataFactory.isDataValid($scope.bSource)) {\n          bDataFactory.setData($scope.bSource, $scope.dateStoreId);\n          return $scope.isDataReady = true;\n        }\n      }, true);\n      setLocalizedData = function() {\n        if ($scope.bMonthNames) {\n          bDataFactory.setMonthNames($scope.bMonthNames);\n        }\n        if ($scope.bDaysNames) {\n          return bDataFactory.setDaysNames($scope.bDaysNames);\n        }\n      };\n      return (function() {\n        return setLocalizedData();\n      })();\n    }],\n    link: function(scope, elem) {\n      var doNotUpdateModelTwice, externalLoadInterval, processClick, setModelFromExternal;\n      scope.date = {\n        viewed: '',\n        model: {}\n      };\n      doNotUpdateModelTwice = false;\n      setModelFromExternal = function() {\n        var bModelDate, isEmptyModel, isSameDate;\n        isSameDate = scope.bModel === scope.date.viewed;\n        isEmptyModel = scope.bModel === '' || scope.bModel === ' ' || !scope.bModel;\n        if (isSameDate || isEmptyModel) {\n          return false;\n        }\n        bModelDate = bDateUtils.stringToDate(scope.bModel, bDataFactory.data[scope.dateStoreId].format, bDataFactory.data[scope.dateStoreId].delimiter);\n        if (!angular.isDate(bModelDate)) {\n          return false;\n        }\n        scope.date.viewed = scope.bModel;\n        doNotUpdateModelTwice = true;\n        return scope.date.model = {\n          day: bModelDate.getDate(),\n          month: bModelDate.getMonth() + 1,\n          year: bModelDate.getFullYear()\n        };\n      };\n      externalLoadInterval = $interval((function() {\n        if (scope.isDataReady) {\n          setModelFromExternal();\n          $interval.cancel(externalLoadInterval);\n          return externalLoadInterval = void 0;\n        }\n      }), 60);\n      scope.$watch('bModel', function(newVal, oldVal) {\n        if (newVal === oldVal) {\n          return;\n        }\n        return setModelFromExternal();\n      });\n      scope.$watch('date.model', function() {\n        var dateTime, formattedDate;\n        if (angular.equals({}, scope.date.model)) {\n          return;\n        }\n        if (doNotUpdateModelTwice) {\n          return doNotUpdateModelTwice = false;\n        }\n        dateTime = new Date(scope.date.model.year, scope.date.model.month - 1, scope.date.model.day).getTime();\n        formattedDate = $filter('date')(dateTime, bDataFactory.data[scope.dateStoreId].format);\n        scope.date.viewed = formattedDate;\n        return scope.bModel = scope.date.viewed;\n      });\n      processClick = function(event) {\n        var clickedElem, isOpen, isOutsideClick, popupElem;\n        isOpen = scope.popup.state.isOpen;\n        clickedElem = event.target;\n        popupElem = elem;\n        isOutsideClick = (popupElem !== clickedElem) && !(popupElem[0].contains(clickedElem));\n        if (isOpen && isOutsideClick) {\n          return scope.$apply(function() {\n            return scope.popup.hidePopup();\n          });\n        }\n      };\n      $document.on('click', processClick);\n      return scope.popup = {\n        state: {\n          isOpen: false\n        },\n        togglePopup: function() {\n          if (!scope.isDataReady) {\n            return;\n          }\n          return scope.popup.state.isOpen = !scope.popup.state.isOpen;\n        },\n        hidePopup: function() {\n          return scope.popup.state.isOpen = false;\n        }\n      };\n    }\n  };\n}]);\n\nangular.module('bdate.data', []).factory('bDataFactory', ['MESSAGES', function(MESSAGES) {\n  var exports;\n  return exports = {\n    data: {},\n    daysNames: [\n      {\n        name: 'Monday',\n        short: 'Mon'\n      }, {\n        name: 'Tuesday',\n        short: 'Tue'\n      }, {\n        name: 'Wednesday',\n        short: 'Wed'\n      }, {\n        name: 'Thursday',\n        short: 'Th'\n      }, {\n        name: 'Friday',\n        short: 'Fri'\n      }, {\n        name: 'Saturday',\n        short: 'Sat'\n      }, {\n        name: 'Sunday',\n        short: 'Sun'\n      }\n    ],\n    setDaysNames: function(daysNamesArr) {\n      if (!exports.isDaysNamesValid(daysNamesArr)) {\n        console.error(MESSAGES.daysNameNotValid);\n        return false;\n      }\n      return exports.daysNames = daysNamesArr;\n    },\n    isDaysNamesValid: function(daysNamesArr) {\n      if (!angular.isArray(daysNamesArr) && angular.isObject(daysNamesArr)) {\n        return false;\n      }\n      if (daysNamesArr.length !== 7) {\n        return false;\n      }\n      if (!daysNamesArr[0].name) {\n        return false;\n      }\n      if (!daysNamesArr[0].short) {\n        return false;\n      }\n      return true;\n    },\n    monthNames: {\n      1: {\n        name: 'January',\n        short: 'Jan'\n      },\n      2: {\n        name: 'February',\n        short: 'Feb'\n      },\n      3: {\n        name: 'March',\n        short: 'Mar'\n      },\n      4: {\n        name: 'April',\n        short: 'Apr'\n      },\n      5: {\n        name: 'May',\n        short: 'May'\n      },\n      6: {\n        name: 'June',\n        short: 'Jun'\n      },\n      7: {\n        name: 'July',\n        short: 'July'\n      },\n      8: {\n        name: 'August',\n        short: 'Aug'\n      },\n      9: {\n        name: 'September',\n        short: 'Sep'\n      },\n      10: {\n        name: 'October',\n        short: 'Oct'\n      },\n      11: {\n        name: 'November',\n        short: 'Nov'\n      },\n      12: {\n        name: 'December',\n        short: 'Dec'\n      }\n    },\n    setMonthNames: function(monthNamesObj) {\n      if (!exports.isMonthNamesValid(monthNamesObj)) {\n        console.error(MESSAGES.monthNameNotValid);\n        return false;\n      }\n      return exports.monthNames = monthNamesObj;\n    },\n    isMonthNamesValid: function(monthNamesObj) {\n      if (angular.isArray(monthNamesObj) && !angular.isObject(monthNamesObj)) {\n        return false;\n      }\n      if (Object.keys(monthNamesObj).length !== 12) {\n        return false;\n      }\n      if (!monthNamesObj[1].name) {\n        return false;\n      }\n      if (!monthNamesObj[1].short) {\n        return false;\n      }\n      return true;\n    },\n    isDataReady: function(storeId) {\n      if (!storeId) {\n        return console.error(MESSAGES.invalidParams);\n      }\n      return !!exports.data[storeId] && exports.isDataValid(exports.data[storeId]);\n    },\n    isDataValid: function(data) {\n      if (!data || (angular.equals({}, data))) {\n        return false;\n      }\n      if (!data.format) {\n        return false;\n      }\n      if (!data.delimiter) {\n        return false;\n      }\n      if (!data.today) {\n        return false;\n      }\n      if (!data.years) {\n        return false;\n      }\n      if (!Object.keys(data.years)[0]) {\n        return false;\n      }\n      if (!Object.keys(Object.keys(data.years)[0])[0]) {\n        return false;\n      }\n      return true;\n    },\n    setData: function(source, storeId) {\n      if (!exports.isDataValid(source)) {\n        console.error(MESSAGES.sourceDataNotValid);\n        return false;\n      }\n      exports.data[storeId] = JSON.parse(JSON.stringify(source));\n      exports.data[storeId].today.date = exports.data[storeId].today.date * 1000;\n      return exports.data[storeId];\n    }\n  };\n}]);\n\nangular.module('bdate', ['bdate.datepicker']).constant('MESSAGES', {\n  invalidParams: 'Invalid params',\n  errorOnChangeMonthOrYear: 'cannot change month or year',\n  sourceDataNotValid: 'source data(json)is not valid',\n  dateNotReady: 'source data(json)is not ready(null?)',\n  daysNameNotValid: 'days names array not valid',\n  monthNameNotValid: 'month names object not valid',\n  yearNotExist: 'year not exist in source data'\n});\n\nangular.module('bdate.popup', ['bdate.utils', 'bdate.data', 'bdate.templates']).directive('bdatePopup', ['bDateUtils', 'bDataFactory', 'MESSAGES', function(bDateUtils, bDataFactory, MESSAGES) {\n  return {\n    restrict: 'E',\n    replace: true,\n    templateUrl: 'popup.html',\n    scope: {\n      popupState: '=',\n      dateModel: '=',\n      dateStoreId: '@?'\n    },\n    link: function(scope) {\n      var getPositionInArray, setInitViewedDate;\n      scope.popup = {\n        hidePopup: function() {\n          return scope.popupState.isOpen = false;\n        },\n        selectDate: function(date) {\n          scope.data.setDateModel(date);\n          return scope.popup.hidePopup();\n        }\n      };\n      setInitViewedDate = function(dateSource) {\n        var day, month, viewedYearNumberInArr, year;\n        year = null;\n        month = null;\n        day = null;\n        if (scope.dateModel && !angular.equals({}, scope.dateModel)) {\n          year = scope.dateModel.year;\n          month = scope.dateModel.month;\n          day = scope.dateModel.day;\n        } else if (bDateUtils.sourceCheckers.month.isMonthExist(dateSource.today.year, dateSource.today.month, scope.dateStoreId)) {\n          year = dateSource.today.year;\n          month = dateSource.today.month;\n        } else {\n          year = bDateUtils.sourceCheckers.year.getFirstYear(scope.dateStoreId);\n          month = bDateUtils.sourceCheckers.month.getFirstMonth(year, scope.dateStoreId);\n        }\n        scope.data.setViewedDate(year, month, day);\n        scope.data.yearsList = bDateUtils.getYearsAsFlatArr(scope.dateStoreId);\n        viewedYearNumberInArr = getPositionInArray(year, scope.data.yearsList);\n        return scope.selectViewedYear = scope.data.yearsList[viewedYearNumberInArr];\n      };\n      getPositionInArray = function(val, arr) {\n        var i;\n        i = 0;\n        while (i < arr.length - 1) {\n          if (+arr[i] === +val) {\n            return i;\n          }\n          i++;\n        }\n        return -1;\n      };\n      scope.data = {\n        setDateModel: function(dateModel) {\n          if (!dateModel) {\n            return console.error(MESSAGES.invalidParams);\n          }\n          return scope.dateModel = dateModel;\n        },\n        format: null,\n        setFormat: function(format) {\n          if (!format) {\n            return console.error(MESSAGES.invalidParams);\n          }\n          return scope.data.format = format;\n        },\n        viewedDate: null,\n        setViewedDate: function(yearNum, monthNum, dayNum) {\n          var ref;\n          if (!yearNum || !monthNum) {\n            return console.error(MESSAGES.invalidParams);\n          }\n          yearNum = +yearNum;\n          monthNum = +monthNum;\n          dayNum = (ref = dayNum) != null ? ref : +{\n            dayNum: 1\n          };\n          scope.data.viewedDate = {\n            year: {\n              first: +Object.keys(bDataFactory.data[scope.dateStoreId].years)[0],\n              last: +Object.keys(bDataFactory.data[scope.dateStoreId].years)[Object.keys(bDataFactory.data[scope.dateStoreId].years).length - 1],\n              number: +yearNum,\n              count: +Object.keys(bDataFactory.data[scope.dateStoreId].years).length\n            },\n            month: {\n              first: +Object.keys(bDataFactory.data[scope.dateStoreId].years[yearNum])[0],\n              last: +Object.keys(bDataFactory.data[scope.dateStoreId].years[yearNum])[Object.keys(bDataFactory.data[scope.dateStoreId].years[yearNum]).length - 1],\n              daysTotal: +bDataFactory.data[scope.dateStoreId].years[yearNum][monthNum].days_total,\n              startDay: +bDataFactory.data[scope.dateStoreId].years[yearNum][monthNum].start_day,\n              number: +monthNum,\n              name: bDateUtils.getMonthName(monthNum),\n              count: +Object.keys(bDataFactory.data[scope.dateStoreId].years[yearNum]).length\n            },\n            day: {\n              number: dayNum\n            }\n          };\n          return scope.data.viewedDate.days = scope.data.getDaysArr(scope.data.viewedDate.year, scope.data.viewedDate.month);\n        },\n        yearsList: [],\n        daysOfWeek: {\n          get: function() {\n            return bDateUtils.daysOfWeek;\n          },\n          getShorts: function() {\n            return bDateUtils.getDaysOfWeekShorts();\n          }\n        },\n        today: null,\n        setToday: function(today) {\n          if (!today) {\n            return console.error(MESSAGES.invalidParams);\n          }\n          return scope.data.today = today;\n        },\n        _getPrevMonthTailDaysArr: function(yearNum, monthNum, startDay) {\n          var i, isPrevMonthExist, prevMonthDate, prevMonthDaysCount, result;\n          result = [];\n          prevMonthDate = {\n            day: null,\n            month: null,\n            year: null\n          };\n          isPrevMonthExist = bDateUtils.sourceCheckers.month.isPrevMonthExist(yearNum, monthNum, scope.dateStoreId);\n          prevMonthDaysCount = 0;\n          if (isPrevMonthExist) {\n            prevMonthDate = bDateUtils.sourceCheckers.month.getPrevMonthObj(yearNum, monthNum, scope.dateStoreId);\n            prevMonthDaysCount = new Date(prevMonthDate.year, prevMonthDate.month, 0).getDate();\n          }\n          i = 0;\n          while (i < startDay - 1) {\n            result.unshift({\n              day: isPrevMonthExist ? prevMonthDaysCount - i : \"\",\n              month: isPrevMonthExist ? prevMonthDate.month : null,\n              year: isPrevMonthExist ? prevMonthDate.year : null,\n              isOtherMonth: true,\n              isLocked: !isPrevMonthExist\n            });\n            i++;\n          }\n          return result;\n        },\n        _getNextMonthTailDaysArr: function(yearNum, monthNum, startDay, daysCount, daysArr) {\n          var daysInWeek, expectedWeeksCount, i, isNextMonthExist, nextMonthDate, result;\n          result = [];\n          daysInWeek = 7;\n          expectedWeeksCount = Math.ceil(daysArr.length / daysInWeek);\n          if ((daysArr.length / daysInWeek) === Math.floor(daysArr.length / daysInWeek)) {\n            return result;\n          }\n          nextMonthDate = {\n            day: null,\n            month: null,\n            year: null\n          };\n          isNextMonthExist = bDateUtils.sourceCheckers.month.isNextMonthExist(yearNum, monthNum, scope.dateStoreId);\n          if (isNextMonthExist) {\n            nextMonthDate = bDateUtils.sourceCheckers.month.getNextMonthObj(yearNum, monthNum, scope.dateStoreId);\n          }\n          i = daysArr.length;\n          while (i < (expectedWeeksCount * daysInWeek)) {\n            daysArr.push({\n              day: isNextMonthExist ? i - (daysCount + startDay - 2) : \"\",\n              month: isNextMonthExist ? nextMonthDate.month : null,\n              year: isNextMonthExist ? nextMonthDate.year : null,\n              isOtherMonth: true,\n              isLocked: !isNextMonthExist\n            });\n            i++;\n          }\n          return result;\n        },\n        _getMonthDaysArr: function(yearNum, monthNum, daysCount) {\n          var i, result;\n          result = [];\n          i = 1;\n          while (i <= daysCount) {\n            result.push({\n              day: i,\n              month: monthNum,\n              year: yearNum\n            });\n            i++;\n          }\n          return result;\n        },\n        _markToday: function(daysArr) {\n          var i;\n          i = 1;\n          while (i < daysArr.length) {\n            if (daysArr[i].day === scope.data.today.day) {\n              daysArr[i].isToday = true;\n            }\n            i++;\n          }\n          return daysArr;\n        },\n        getDaysArr: function(year, month) {\n          var currentMonthDaysArr, daysCount, nextMonthTailDaysArr, prevMonthTailDaysArr, result, startDay;\n          daysCount = +month.daysTotal;\n          startDay = +month.startDay;\n          prevMonthTailDaysArr = scope.data._getPrevMonthTailDaysArr(year.number, month.number, startDay);\n          currentMonthDaysArr = scope.data._getMonthDaysArr(year.number, month.number, daysCount);\n          if (year.number === scope.data.today.year && month.number === scope.data.today.month) {\n            currentMonthDaysArr = scope.data._markToday(currentMonthDaysArr);\n          }\n          result = prevMonthTailDaysArr.concat(currentMonthDaysArr);\n          nextMonthTailDaysArr = scope.data._getNextMonthTailDaysArr(year.number, month.number, startDay, daysCount, result);\n          result = result.concat(nextMonthTailDaysArr);\n          return result;\n        },\n        goNextMonth: function(isForward) {\n          var nextObj;\n          nextObj = bDateUtils.sourceCheckers.month.getNextAvailableMonth(isForward, scope.data.viewedDate.year.number, scope.data.viewedDate.month.number, scope.dateStoreId);\n          if (nextObj) {\n            return scope.data.setViewedDate(nextObj.year, nextObj.month);\n          }\n        },\n        goNextYear: function(isForward) {\n          var nextObj;\n          nextObj = bDateUtils.sourceCheckers.year.getNextAvailableYear(isForward, scope.data.viewedDate.year.number, scope.data.viewedDate.month.number, scope.dateStoreId);\n          if (nextObj) {\n            return scope.data.setViewedDate(nextObj.year, nextObj.month);\n          }\n        },\n        goToYear: function(yearNum) {\n          var monthNum;\n          if (!yearNum) {\n            return console.error(MESSAGES.invalidParams);\n          }\n          yearNum = +yearNum;\n          if (!bDateUtils.sourceCheckers.year.isYearExist(yearNum, scope.dateStoreId)) {\n            return console.error(MESSAGES.yearNotExist);\n          }\n          if (bDateUtils.sourceCheckers.month.isMonthExist(yearNum, scope.data.viewedDate.month.number, scope.dateStoreId)) {\n            monthNum = +scope.data.viewedDate.month.number;\n          } else {\n            monthNum = +bDateUtils.sourceCheckers.month.getFirstMonth(yearNum, scope.dateStoreId);\n          }\n          return scope.data.setViewedDate(yearNum, monthNum, scope.data.viewedDate.day.number);\n        },\n        init: function(dateSource) {\n          scope.data.setFormat(dateSource.format);\n          scope.data.setToday(dateSource.today);\n          return setInitViewedDate(dateSource);\n        }\n      };\n      (function() {\n        if (bDataFactory.isDataReady(scope.dateStoreId)) {\n          scope.data.init(bDataFactory.data[scope.dateStoreId]);\n        }\n        return scope.bDateUtils = bDateUtils;\n      })();\n      scope.$watch((function() {\n        return bDataFactory.data[scope.dateStoreId];\n      }), (function() {\n        if (bDataFactory.isDataReady(scope.dateStoreId)) {\n          return scope.data.init(bDataFactory.data[scope.dateStoreId]);\n        }\n      }), true);\n      return scope.$watch('popupState.isOpen', function() {\n        if (scope.popupState.isOpen && (scope.dateModel && !angular.equals({}, scope.dateModel))) {\n          scope.data.setDateModel(scope.dateModel);\n          return scope.data.setViewedDate(scope.dateModel.year, scope.dateModel.month, scope.dateModel.day);\n        }\n      });\n    }\n  };\n}]);\n\nangular.module('bdate.utils', ['bdate.data']).factory('bDateUtils', ['MESSAGES', 'bDataFactory', function(MESSAGES, bDataFactory) {\n  var exports;\n  return exports = {\n    getDaysOfWeekShorts: function() {\n      var i, result;\n      i = 0;\n      result = [];\n      while (i < bDataFactory.daysNames.length) {\n        result.push(bDataFactory.daysNames[i].short);\n        i++;\n      }\n      return result;\n    },\n    getMonthName: function(number) {\n      return bDataFactory.monthNames[number].name;\n    },\n    getYearsAsFlatArr: function(dateStoreId) {\n      return Object.keys(bDataFactory.data[dateStoreId].years);\n    },\n    makeDateModel: function(datetime) {\n      var date, day, month, year;\n      date = new Date(datetime);\n      day = date.getDate();\n      month = date.getMonth() + 1;\n      year = date.getFullYear();\n      return {\n        day: day,\n        month: month,\n        year: year\n      };\n    },\n    stringToDate: function(dateStr, format, delimiter) {\n      var dateItems, day, dayIndex, formatItems, formatLowerCase, month, monthIndex, year, yearIndex;\n      formatLowerCase = format.toLowerCase();\n      formatItems = formatLowerCase.split(delimiter);\n      dateItems = dateStr.split(delimiter);\n      monthIndex = formatItems.indexOf('mm');\n      dayIndex = formatItems.indexOf('dd');\n      yearIndex = formatItems.indexOf('yyyy');\n      year = +dateItems[yearIndex];\n      month = +dateItems[monthIndex] - 1;\n      day = +dateItems[dayIndex];\n      if (month > 12) {\n        return false;\n      }\n      if (day > 31) {\n        return false;\n      }\n      return new Date(year, month, day);\n    },\n    isValidDate: function(date) {\n      if (!angular.isDate) {\n        date = new Date(date);\n      }\n      if (isNaN(date.getTime())) {\n        return false;\n      }\n    },\n    sourceCheckers: {\n      month: {\n        isMonthExist: function(yearNum, monthNum, storeId) {\n          if (!yearNum || !monthNum) {\n            return console.error(MESSAGES.invalidParams);\n          }\n          yearNum = +yearNum;\n          monthNum = +monthNum;\n          if (!bDataFactory.isDataReady(storeId)) {\n            return false;\n          }\n          if (!bDataFactory.data[storeId].years[yearNum]) {\n            return false;\n          }\n          return !!bDataFactory.data[storeId].years[yearNum][monthNum];\n        },\n        isPrevMonthExist: function(yearNum, curMonthNum, storeId) {\n          var isFirstMonth, isFirstYear, lastMonthOfPrevYearNum, prevMonthNum, prevYearNum;\n          if (!yearNum || !curMonthNum) {\n            return false;\n          }\n          yearNum = +yearNum;\n          curMonthNum = +curMonthNum;\n          if (!exports.sourceCheckers.month.isMonthExist(yearNum, curMonthNum, storeId)) {\n            return false;\n          }\n          isFirstMonth = exports.sourceCheckers.month.isFirstMonth(yearNum, curMonthNum, storeId);\n          if (!isFirstMonth) {\n            prevMonthNum = curMonthNum - 1;\n            return exports.sourceCheckers.month.isMonthExist(yearNum, prevMonthNum, storeId);\n          } else {\n            isFirstYear = exports.sourceCheckers.year.isFirstYear(yearNum, storeId);\n            if (!isFirstYear) {\n              prevYearNum = yearNum - 1;\n              lastMonthOfPrevYearNum = exports.sourceCheckers.month.getLastMonth(prevYearNum, storeId);\n              return exports.sourceCheckers.month.isMonthExist(prevYearNum, lastMonthOfPrevYearNum, storeId);\n            } else {\n              return false;\n            }\n          }\n        },\n        getPrevMonthObj: function(yearNum, curMonthNum, storeId) {\n          var isFirstMonth, isFirstYear, lastMonthOfPrevYearNum, prevMonthNum, prevYearNum;\n          if (!yearNum || !curMonthNum) {\n            return console.error(MESSAGES.invalidParams);\n          }\n          yearNum = +yearNum;\n          curMonthNum = +curMonthNum;\n          isFirstMonth = exports.sourceCheckers.month.isFirstMonth(yearNum, curMonthNum, storeId);\n          if (!isFirstMonth) {\n            prevMonthNum = curMonthNum - 1;\n            if (exports.sourceCheckers.month.isMonthExist(yearNum, prevMonthNum, storeId)) {\n              return {\n                year: yearNum,\n                month: prevMonthNum\n              };\n            } else {\n              return null;\n            }\n          } else {\n            isFirstYear = exports.sourceCheckers.year.isFirstYear(yearNum, storeId);\n            if (!isFirstYear) {\n              prevYearNum = yearNum - 1;\n              lastMonthOfPrevYearNum = exports.sourceCheckers.month.getLastMonth(prevYearNum, storeId);\n              if (exports.sourceCheckers.month.isMonthExist(prevYearNum, lastMonthOfPrevYearNum, storeId)) {\n                return {\n                  year: prevYearNum,\n                  month: lastMonthOfPrevYearNum\n                };\n              } else {\n                return null;\n              }\n            } else {\n              return null;\n            }\n          }\n        },\n        isNextMonthExist: function(yearNum, curMonthNum, storeId) {\n          var firstMonthOfNextYearNum, isLastMonth, isLastYear, nextMonthNum, nextYearNum;\n          if (!yearNum || !curMonthNum) {\n            return false;\n          }\n          yearNum = +yearNum;\n          curMonthNum = +curMonthNum;\n          if (!exports.sourceCheckers.month.isMonthExist(yearNum, curMonthNum, storeId)) {\n            return false;\n          }\n          isLastMonth = exports.sourceCheckers.month.isLastMonth(yearNum, curMonthNum, storeId);\n          if (!isLastMonth) {\n            nextMonthNum = curMonthNum + 1;\n            return exports.sourceCheckers.month.isMonthExist(yearNum, nextMonthNum, storeId);\n          } else {\n            isLastYear = exports.sourceCheckers.year.isLastYear(yearNum, storeId);\n            if (!isLastYear) {\n              nextYearNum = yearNum + 1;\n              firstMonthOfNextYearNum = exports.sourceCheckers.month.getFirstMonth(nextYearNum, storeId);\n              return exports.sourceCheckers.month.isMonthExist(nextYearNum, firstMonthOfNextYearNum, storeId);\n            } else {\n              return false;\n            }\n          }\n        },\n        getNextMonthObj: function(yearNum, curMonthNum, storeId) {\n          var firstMonthOfNextYearNum, isLastMonth, isLastYear, nextMonthNum, nextYearNum;\n          if (!yearNum || !curMonthNum) {\n            return console.error(MESSAGES.invalidParams);\n          }\n          yearNum = +yearNum;\n          curMonthNum = +curMonthNum;\n          isLastMonth = exports.sourceCheckers.month.isLastMonth(yearNum, curMonthNum, storeId);\n          if (!isLastMonth) {\n            nextMonthNum = curMonthNum + 1;\n            if (exports.sourceCheckers.month.isMonthExist(yearNum, nextMonthNum, storeId)) {\n              return {\n                year: yearNum,\n                month: nextMonthNum\n              };\n            } else {\n              return null;\n            }\n          } else {\n            isLastYear = exports.sourceCheckers.year.isLastYear(yearNum, storeId);\n            if (!isLastYear) {\n              nextYearNum = yearNum + 1;\n              firstMonthOfNextYearNum = exports.sourceCheckers.month.getFirstMonth(nextYearNum, storeId);\n              if (exports.sourceCheckers.month.isMonthExist(nextYearNum, firstMonthOfNextYearNum, storeId)) {\n                return {\n                  year: nextYearNum,\n                  month: firstMonthOfNextYearNum\n                };\n              } else {\n                return null;\n              }\n            } else {\n              return null;\n            }\n          }\n        },\n        getMonth: function(yearNum, monthNum, storeId) {\n          if (!yearNum || !monthNum) {\n            return console.error(MESSAGES.invalidParams);\n          }\n          if (!bDataFactory.isDataReady(storeId)) {\n            return console.error(MESSAGES.dateNotReady);\n          }\n          return bDataFactory.data[storeId].years[yearNum][monthNum];\n        },\n        isFirstMonth: function(yearNum, monthNum, storeId) {\n          if (!bDataFactory.isDataReady(storeId)) {\n            return console.error(MESSAGES.dateNotReady);\n          }\n          yearNum = +yearNum;\n          monthNum = +monthNum;\n          return monthNum === +Object.keys(bDataFactory.data[storeId].years[yearNum])[0];\n        },\n        getFirstMonth: function(yearNum, storeId) {\n          if (!bDataFactory.isDataReady(storeId)) {\n            return console.error(MESSAGES.dateNotReady);\n          }\n          yearNum = +yearNum;\n          return +Object.keys(bDataFactory.data[storeId].years[yearNum])[0];\n        },\n        isLastMonth: function(yearNum, monthNum, storeId) {\n          if (!bDataFactory.isDataReady(storeId)) {\n            return console.error(MESSAGES.dateNotReady);\n          }\n          yearNum = +yearNum;\n          monthNum = +monthNum;\n          return monthNum === +Object.keys(bDataFactory.data[storeId].years[yearNum])[Object.keys(bDataFactory.data[storeId].years[yearNum]).length - 1];\n        },\n        getLastMonth: function(yearNum, storeId) {\n          if (!bDataFactory.isDataReady(storeId)) {\n            return console.error(MESSAGES.dateNotReady);\n          }\n          yearNum = +yearNum;\n          return +Object.keys(bDataFactory.data[storeId].years[yearNum])[Object.keys(bDataFactory.data[storeId].years[yearNum]).length - 1];\n        },\n        getNextAvailableMonth: function(isForward, yearNum, monthNum, storeId) {\n          var isFirstMonth, isLastMonth, nextMonthNum, nextYearNum, result;\n          yearNum = +yearNum;\n          monthNum = +monthNum;\n          isFirstMonth = exports.sourceCheckers.month.isFirstMonth(yearNum, monthNum, storeId);\n          isLastMonth = exports.sourceCheckers.month.isLastMonth(yearNum, monthNum, storeId);\n          nextYearNum = yearNum;\n          nextMonthNum = monthNum;\n          if (isForward) {\n            if (!isLastMonth) {\n              nextMonthNum = monthNum + 1;\n            } else {\n              nextYearNum = yearNum + 1;\n              if (exports.sourceCheckers.year.isYearExist(nextYearNum, storeId)) {\n                nextMonthNum = exports.sourceCheckers.month.getFirstMonth(nextYearNum, storeId);\n              } else {\n                console.error(MESSAGES.errorOnChangeMonthOrYear);\n                return false;\n              }\n            }\n          } else if (!isForward) {\n            if (!isFirstMonth) {\n              nextMonthNum = monthNum - 1;\n            } else {\n              nextYearNum = yearNum - 1;\n              if (exports.sourceCheckers.year.isYearExist(nextYearNum, storeId)) {\n                nextMonthNum = exports.sourceCheckers.month.getLastMonth(nextYearNum, storeId);\n              } else {\n                console.error(MESSAGES.errorOnChangeMonthOrYear);\n                return false;\n              }\n            }\n          }\n          return result = {\n            year: nextYearNum,\n            month: nextMonthNum\n          };\n        }\n      },\n      year: {\n        isYearExist: function(yearNum, storeId) {\n          if (!yearNum) {\n            return console.error(MESSAGES.invalidParams);\n          }\n          if (!bDataFactory.isDataReady(storeId)) {\n            return false;\n          }\n          yearNum = +yearNum;\n          return !!bDataFactory.data[storeId].years[yearNum];\n        },\n        getYear: function(yearNum, storeId) {\n          if (!yearNum) {\n            return console.error(MESSAGES.invalidParams);\n          }\n          if (!bDataFactory.isDataReady(storeId)) {\n            return console.error(MESSAGES.dateNotReady);\n          }\n          return bDataFactory.data[storeId].years[yearNum];\n        },\n        isFirstYear: function(yearNum, storeId) {\n          yearNum = +yearNum;\n          return yearNum === +Object.keys(bDataFactory.data[storeId].years)[0];\n        },\n        getFirstYear: function(storeId) {\n          if (!bDataFactory.isDataReady(storeId)) {\n            return console.error(MESSAGES.dateNotReady);\n          }\n          return +Object.keys(bDataFactory.data[storeId].years)[0];\n        },\n        isLastYear: function(yearNum, storeId) {\n          if (!bDataFactory.isDataReady(storeId)) {\n            return console.error(MESSAGES.dateNotReady);\n          }\n          yearNum = +yearNum;\n          return yearNum === +Object.keys(bDataFactory.data[storeId].years)[Object.keys(bDataFactory.data[storeId].years).length - 1];\n        },\n        getLastYear: function(storeId) {\n          if (!bDataFactory.isDataReady(storeId)) {\n            return console.error(MESSAGES.dateNotReady);\n          }\n          return +Object.keys(bDataFactory.data[storeId].years)[Object.keys(bDataFactory.data[storeId].years).length - 1];\n        },\n        getNextAvailableYear: function(isForward, yearNum, monthNum, storeId) {\n          var isFirstYear, isLastYear, nextMonthNum, nextYearNum, result;\n          yearNum = +yearNum;\n          monthNum = +monthNum;\n          isFirstYear = exports.sourceCheckers.year.isFirstYear(yearNum, storeId);\n          isLastYear = exports.sourceCheckers.year.isLastYear(yearNum, storeId);\n          nextYearNum = yearNum;\n          nextMonthNum = monthNum;\n          if (isForward) {\n            if (!isLastYear) {\n              nextYearNum = yearNum + 1;\n              if (exports.sourceCheckers.month.isMonthExist(nextYearNum, monthNum, storeId)) {\n                nextMonthNum = monthNum;\n              } else {\n                nextMonthNum = exports.sourceCheckers.month.getFirstMonth(nextYearNum, storeId);\n              }\n            } else {\n              return false;\n            }\n          } else if (!isForward) {\n            if (!isFirstYear) {\n              nextYearNum = yearNum - 1;\n              if (exports.sourceCheckers.month.isMonthExist(nextYearNum, monthNum, storeId)) {\n                nextMonthNum = monthNum;\n              } else {\n                nextMonthNum = exports.sourceCheckers.month.getFirstMonth(nextYearNum, storeId);\n              }\n            } else {\n              return false;\n            }\n          }\n          return result = {\n            year: nextYearNum,\n            month: nextMonthNum\n          };\n        }\n      }\n    }\n  };\n}]);\n\nangular.module(\"bdate.templates\", []).run([\"$templateCache\", function($templateCache) {$templateCache.put(\"bdate.html\",\"<div id={{::bRootId}} ng-class=\\\"{b_datepicker_in_progress: !isDataReady}\\\" class=\\\"b_datepicker_root {{::bRootClasses}}\\\"><input type=text id={{::bInputId}} ng-model=date.viewed ng-click=popup.togglePopup() ng-disabled=!isDataReady readonly=readonly class=\\\"b_datepicker_input {{::bInputClasses}}\\\"><button type=button ng-click=popup.togglePopup() ng-disabled=!isDataReady class=\\\"b_datepicker_button {{::bButtonClasses}}\\\">&nbsp;</button><bdate-popup id={{::bPopupId}} popup-state=popup.state date-model=date.model date-store-id={{::dateStoreId}} class={{::bPopupClasses}}></bdate-popup></div>\");\n$templateCache.put(\"popup.html\",\"<div ng-show=popupState.isOpen class=b_popup><div class=b_popup_controls><div class=b_btn_prev_container><button type=button ng-click=data.goNextYear(false) ng-disabled=\\\"!bDateUtils.sourceCheckers.year.isYearExist(data.viewedDate.year.number - 1, dateStoreId)\\\" class=\\\"b_popup_btn b_btn_prev\\\">&#9664;&#9664;</button><button type=button ng-click=data.goNextMonth(false) ng-disabled=\\\"!bDateUtils.sourceCheckers.month.isPrevMonthExist(data.viewedDate.year.number, data.viewedDate.month.number, dateStoreId)\\\" class=\\\"b_popup_btn b_btn_prev\\\">&#9664;</button></div><div ng-bind=data.viewedDate.month.name class=b_popup_month></div>&nbsp;<select ng-model=selectViewedYear ng-options=\\\"year for year in data.yearsList\\\" ng-change=data.goToYear(selectViewedYear) class=b_popup_year></select><div class=b_btn_next_container><button type=button ng-click=data.goNextMonth(true) ng-disabled=\\\"!bDateUtils.sourceCheckers.month.isNextMonthExist(data.viewedDate.year.number, data.viewedDate.month.number, dateStoreId)\\\" class=\\\"b_popup_btn b_btn_next\\\">&#9654;</button><button type=button ng-click=data.goNextYear(true) ng-disabled=\\\"!bDateUtils.sourceCheckers.year.isYearExist(data.viewedDate.year.number + 1, dateStoreId)\\\" class=\\\"b_popup_btn b_btn_next\\\">&#9654;&#9654;</button></div></div><table class=b_popup_days><tr><td ng-repeat=\\\"dayOfWeek in ::data.daysOfWeek.getShorts()\\\" class=b_popup_day_of_week><span ng-bind=::dayOfWeek></span></td></tr></table><table class=b_popup_weeks><tr class=b_popup_week><td ng-repeat=\\\"date in data.viewedDate.days track by $index\\\" ng-class=\\\"{b_popup_today_day_container: date.isToday}\\\" class=b_popup_day><button type=button ng-bind=date.day ng-click=popup.selectDate(date) ng-disabled=date.isLocked ng-class=\\\"{b_popup_cur_month_day: !date.isOtherMonth, b_popup_today_day: date.isToday, b_popup_selected_day: date.day == dateModel.day &amp;&amp; date.month == dateModel.month &amp;&amp; date.year == dateModel.year, b_popup_locked_day: date.isLocked}\\\" class=b_popup_day_btn></button></td></tr></table><div ng-show=\\\"bDateUtils.isMonthExist(data.today.year, data.today.month, dateStoreId)\\\" class=b_popup_today>Сегодня<button type=button ng-bind=\\\"data.today.date | date:data.format\\\" ng-click=popup.selectDate(bDateUtils.makeDateModel(data.today.date)) class=b_popup_today_btn></button></div></div>\");}]);"],"sourceRoot":"/source/"}