{"version":3,"sources":["bdate.js"],"names":["angular","module","directive","$filter","bDataFactory","bDateUtils","$document","restrict","replace","templateUrl","scope","bModel","bSource","bRootId","bInputId","bPopupId","bRootClasses","bInputClasses","bButtonClasses","bPopupClasses","controller","$scope","_generateRandomId","Math","random","toString","substring","dataStoreId","isDataReady","$watch","isDataValid","setData","link","elem","doNotUpdateModelTwice","processClick","date","viewed","model","newVal","oldVal","bModelDate","isEmptyModel","isSameDate","stringToDate","data","format","delimiter","isDate","day","getDate","month","getMonth","year","getFullYear","dateTime","formattedDate","equals","Date","getTime","event","clickedElem","isOpen","isOutsideClick","popupElem","popup","state","target","contains","$apply","hidePopup","on","togglePopup","factory","MESSAGES","exports","storeId","console","error","invalidParams","today","years","Object","keys","source","JSON","parse","stringify","sourceDataNotValid","constant","errorOnChangeMonthOrYear","dateNotReady","popupState","dateModel","log","selectDate","setDateModel","setFormat","viewedDate","setViewedDate","yearNum","monthNum","dayNum","first","last","length","number","count","daysTotal","days_total","startDay","start_day","name","getMonthName","days","getDaysArr","daysOfWeek","get","getShorts","getDaysOfWeekShorts","setToday","_getPrevMonthTailDaysArr","i","isPrevMonthExist","prevMonthDate","prevMonthDaysCount","result","sourceCheckers","getPrevMonthObj","unshift","isOtherMonth","isLocked","_getNextMonthTailDaysArr","daysCount","daysArr","daysInWeek","expectedWeeksCount","isNextMonthExist","nextMonthDate","ceil","floor","getNextMonthObj","push","_getMonthDaysArr","_markToday","isToday","currentMonthDaysArr","nextMonthTailDaysArr","prevMonthTailDaysArr","concat","goNextMonth","isForward","nextObj","getNextAvailableMonth","goNextYear","getNextAvailableYear","init","dateSource","firstYear","isMonthExist","getFirstYear","getFirstMonth","daysOfWeekList","monthObj","short",1,2,3,4,5,6,7,8,9,10,11,12,"makeDateModel","datetime","dateStr","dateItems","dayIndex","formatItems","formatLowerCase","monthIndex","yearIndex","toLowerCase","split","indexOf","isValidDate","isNaN","curMonthNum","isFirstMonth","isFirstYear","lastMonthOfPrevYearNum","prevMonthNum","prevYearNum","getLastMonth","firstMonthOfNextYearNum","isLastMonth","isLastYear","nextMonthNum","nextYearNum","isYearExist","getYear","getLastYear","run","$templateCache","put"],"mappings":"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","file":"bdate.min.js","sourcesContent":["angular.module('bdate.datepicker', ['bdate.popup', 'bdate.data', 'bdate.templates']).directive('bdatepicker', ['$filter', 'bDataFactory', 'bDateUtils', '$document', function($filter, bDataFactory, bDateUtils, $document) {\n  return {\n    restrict: 'E',\n    replace: true,\n    templateUrl: 'bdate.html',\n    scope: {\n      bModel: '=',\n      bSource: '=',\n      bRootId: '@?',\n      bInputId: '@?',\n      bPopupId: '@?',\n      bRootClasses: '@?',\n      bInputClasses: '@?',\n      bButtonClasses: '@?',\n      bPopupClasses: '@?'\n    },\n    controller: ['$scope', function($scope) {\n      var _generateRandomId;\n      _generateRandomId = function() {\n        return Math.random().toString(36).substring(12);\n      };\n      $scope.dataStoreId = _generateRandomId();\n      $scope.isDataReady = false;\n      return $scope.$watch('bSource', function() {\n        if (bDataFactory.isDataValid($scope.bSource)) {\n          bDataFactory.setData($scope.bSource, $scope.dataStoreId);\n          return $scope.isDataReady = true;\n        }\n      }, true);\n    }],\n    link: function(scope, elem) {\n      var doNotUpdateModelTwice, processClick;\n      scope.date = {\n        viewed: '',\n        model: {}\n      };\n      doNotUpdateModelTwice = false;\n      scope.$watch('bModel', function(newVal, oldVal) {\n        var bModelDate, isEmptyModel, isSameDate;\n        isSameDate = scope.bModel === scope.date.viewed;\n        isEmptyModel = scope.bModel === '' || scope.bModel === ' ' || !scope.bModel;\n        if (isSameDate || isEmptyModel) {\n          return false;\n        }\n        bModelDate = bDateUtils.stringToDate(scope.bModel, bDataFactory.data.format, bDataFactory.data.delimiter);\n        if (!angular.isDate(bModelDate)) {\n          return false;\n        }\n        scope.date.viewed = scope.bModel;\n        doNotUpdateModelTwice = true;\n        return scope.date.model = {\n          day: bModelDate.getDate(),\n          month: bModelDate.getMonth() + 1,\n          year: bModelDate.getFullYear()\n        };\n      });\n      scope.$watch('date.model', function() {\n        var dateTime, formattedDate;\n        if (angular.equals({}, scope.date.model)) {\n          return;\n        }\n        if (doNotUpdateModelTwice) {\n          return doNotUpdateModelTwice = false;\n        }\n        dateTime = new Date(scope.date.model.year, scope.date.model.month - 1, scope.date.model.day).getTime();\n        formattedDate = $filter('date')(dateTime, bDataFactory.data.format);\n        scope.date.viewed = formattedDate;\n        return scope.bModel = scope.date.viewed;\n      });\n      processClick = function(event) {\n        var clickedElem, isOpen, isOutsideClick, popupElem;\n        isOpen = scope.popup.state.isOpen;\n        clickedElem = event.target;\n        popupElem = elem;\n        isOutsideClick = (popupElem !== clickedElem) && !(popupElem[0].contains(clickedElem));\n        if (isOpen && isOutsideClick) {\n          return scope.$apply(function() {\n            return scope.popup.hidePopup();\n          });\n        }\n      };\n      $document.on('click', processClick);\n      return scope.popup = {\n        state: {\n          isOpen: false\n        },\n        togglePopup: function() {\n          if (!scope.isDataReady) {\n            return;\n          }\n          return scope.popup.state.isOpen = !scope.popup.state.isOpen;\n        },\n        hidePopup: function() {\n          return scope.popup.state.isOpen = false;\n        }\n      };\n    }\n  };\n}]);\n\nangular.module('bdate.data', []).factory('bDataFactory', ['MESSAGES', function(MESSAGES) {\n  var exports;\n  return exports = {\n    data: {},\n    isDataReady: function(storeId) {\n      if (!storeId) {\n        return console.error(MESSAGES.invalidParams);\n      }\n      return !!exports.data[storeId] && exports.isDataValid(exports.data);\n    },\n    isDataValid: function(data) {\n      if (!data || (angular.equals({}, data))) {\n        return false;\n      }\n      if (!data.format) {\n        return false;\n      }\n      if (!data.delimiter) {\n        return false;\n      }\n      if (!data.today) {\n        return false;\n      }\n      if (!data.years) {\n        return false;\n      }\n      if (!Object.keys(data.years)[0]) {\n        return false;\n      }\n      if (!Object.keys(Object.keys(data.years)[0])[0]) {\n        return false;\n      }\n      return true;\n    },\n    setData: function(source, storeId) {\n      if (!exports.isDataValid(source)) {\n        console.error(MESSAGES.sourceDataNotValid);\n        return false;\n      }\n      exports.data[storeId] = JSON.parse(JSON.stringify(source));\n      exports.data[storeId].today.date = exports.data.today.date * 1000;\n      return exports.data[storeId];\n    }\n  };\n}]);\n\nangular.module('bdate', ['bdate.datepicker']).constant('MESSAGES', {\n  invalidParams: 'Invalid params',\n  errorOnChangeMonthOrYear: 'cannot change month or year',\n  sourceDataNotValid: 'source data(json)is not valid',\n  dateNotReady: 'source data(json)is not ready(null?)'\n});\n\nangular.module('bdate.popup', ['bdate.utils', 'bdate.data', 'bdate.templates']).directive('bdatePopup', ['bDateUtils', 'bDataFactory', 'MESSAGES', function(bDateUtils, bDataFactory, MESSAGES) {\n  return {\n    restrict: 'E',\n    replace: true,\n    templateUrl: 'popup.html',\n    scope: {\n      popupState: '=',\n      dateModel: '=',\n      dataStoreId: '@'\n    },\n    link: function(scope) {\n      console.log(scope.dataStoreId);\n      scope.popup = {\n        hidePopup: function() {\n          return scope.popupState.isOpen = false;\n        },\n        selectDate: function(date) {\n          scope.data.setDateModel(date);\n          return scope.popup.hidePopup();\n        }\n      };\n      scope.data = {\n        setDateModel: function(dateModel) {\n          if (!dateModel) {\n            return console.error(MESSAGES.invalidParams);\n          }\n          return scope.dateModel = dateModel;\n        },\n        format: null,\n        setFormat: function(format) {\n          if (!format) {\n            return console.error(MESSAGES.invalidParams);\n          }\n          return scope.data.format = format;\n        },\n        viewedDate: null,\n        setViewedDate: function(yearNum, monthNum, dayNum) {\n          if (!yearNum || !monthNum) {\n            return console.error(MESSAGES.invalidParams);\n          }\n          yearNum = +yearNum;\n          monthNum = +monthNum;\n          scope.data.viewedDate = {\n            year: {\n              first: +Object.keys(bDataFactory.data.years)[0],\n              last: +Object.keys(bDataFactory.data.years)[Object.keys(bDataFactory.data.years).length - 1],\n              number: +yearNum,\n              count: +Object.keys(bDataFactory.data.years).length\n            },\n            month: {\n              first: +Object.keys(bDataFactory.data.years[yearNum])[0],\n              last: +Object.keys(bDataFactory.data.years[yearNum])[Object.keys(bDataFactory.data.years[yearNum]).length - 1],\n              daysTotal: +bDataFactory.data.years[yearNum][monthNum].days_total,\n              startDay: +bDataFactory.data.years[yearNum][monthNum].start_day,\n              number: +monthNum,\n              name: bDateUtils.getMonthName(monthNum),\n              count: +Object.keys(bDataFactory.data.years[yearNum]).length\n            },\n            day: {\n              number: +dayNum\n            }\n          };\n          return scope.data.viewedDate.days = scope.data.getDaysArr(scope.data.viewedDate.year, scope.data.viewedDate.month);\n        },\n        daysOfWeek: {\n          get: function() {\n            return bDateUtils.daysOfWeek;\n          },\n          getShorts: function() {\n            return bDateUtils.getDaysOfWeekShorts();\n          }\n        },\n        today: null,\n        setToday: function(today) {\n          if (!today) {\n            return console.error(MESSAGES.invalidParams);\n          }\n          return scope.data.today = today;\n        },\n        _getPrevMonthTailDaysArr: function(yearNum, monthNum, startDay) {\n          var i, isPrevMonthExist, prevMonthDate, prevMonthDaysCount, result;\n          result = [];\n          prevMonthDate = {\n            day: null,\n            month: null,\n            year: null\n          };\n          isPrevMonthExist = bDateUtils.sourceCheckers.month.isPrevMonthExist(yearNum, monthNum, scope.dataStoreId);\n          prevMonthDaysCount = 0;\n          if (isPrevMonthExist) {\n            prevMonthDate = bDateUtils.sourceCheckers.month.getPrevMonthObj(yearNum, monthNum, scope.dataStoreId);\n            prevMonthDaysCount = new Date(prevMonthDate.year, prevMonthDate.month, 0).getDate();\n          }\n          i = 0;\n          while (i < startDay - 1) {\n            result.unshift({\n              day: isPrevMonthExist ? prevMonthDaysCount - i : \"\",\n              month: isPrevMonthExist ? prevMonthDate.month : null,\n              year: isPrevMonthExist ? prevMonthDate.year : null,\n              isOtherMonth: true,\n              isLocked: !isPrevMonthExist\n            });\n            i++;\n          }\n          return result;\n        },\n        _getNextMonthTailDaysArr: function(yearNum, monthNum, startDay, daysCount, daysArr) {\n          var daysInWeek, expectedWeeksCount, i, isNextMonthExist, nextMonthDate, result;\n          result = [];\n          daysInWeek = 7;\n          expectedWeeksCount = Math.ceil(daysArr.length / daysInWeek);\n          if ((daysArr.length / daysInWeek) === Math.floor(daysArr.length / daysInWeek)) {\n            return result;\n          }\n          nextMonthDate = {\n            day: null,\n            month: null,\n            year: null\n          };\n          isNextMonthExist = bDateUtils.sourceCheckers.month.isNextMonthExist(yearNum, monthNum, scope.dataStoreId);\n          if (isNextMonthExist) {\n            nextMonthDate = bDateUtils.sourceCheckers.month.getNextMonthObj(yearNum, monthNum, scope.dataStoreId);\n          }\n          i = daysArr.length;\n          while (i < (expectedWeeksCount * daysInWeek)) {\n            daysArr.push({\n              day: isNextMonthExist ? i - (daysCount + startDay - 2) : \"\",\n              month: isNextMonthExist ? nextMonthDate.month : null,\n              year: isNextMonthExist ? nextMonthDate.year : null,\n              isOtherMonth: true,\n              isLocked: !isNextMonthExist\n            });\n            i++;\n          }\n          return result;\n        },\n        _getMonthDaysArr: function(yearNum, monthNum, daysCount) {\n          var i, result;\n          result = [];\n          i = 1;\n          while (i <= daysCount) {\n            result.push({\n              day: i,\n              month: monthNum,\n              year: yearNum\n            });\n            i++;\n          }\n          return result;\n        },\n        _markToday: function(daysArr) {\n          var i;\n          i = 1;\n          while (i < daysArr.length) {\n            if (daysArr[i].day === scope.data.today.day) {\n              daysArr[i].isToday = true;\n            }\n            i++;\n          }\n          return daysArr;\n        },\n        getDaysArr: function(year, month) {\n          var currentMonthDaysArr, daysCount, nextMonthTailDaysArr, prevMonthTailDaysArr, result, startDay;\n          daysCount = +month.daysTotal;\n          startDay = +month.startDay;\n          prevMonthTailDaysArr = scope.data._getPrevMonthTailDaysArr(year.number, month.number, startDay);\n          currentMonthDaysArr = scope.data._getMonthDaysArr(year.number, month.number, daysCount);\n          if (year.number === scope.data.today.year && month.number === scope.data.today.month) {\n            currentMonthDaysArr = scope.data._markToday(currentMonthDaysArr);\n          }\n          result = prevMonthTailDaysArr.concat(currentMonthDaysArr);\n          nextMonthTailDaysArr = scope.data._getNextMonthTailDaysArr(year.number, month.number, startDay, daysCount, result);\n          result = result.concat(nextMonthTailDaysArr);\n          return result;\n        },\n        goNextMonth: function(isForward) {\n          var nextObj;\n          nextObj = bDateUtils.sourceCheckers.month.getNextAvailableMonth(isForward, scope.data.viewedDate.year.number, scope.data.viewedDate.month.number, scope.dataStoreId);\n          if (nextObj) {\n            return scope.data.setViewedDate(nextObj.year, nextObj.month);\n          }\n        },\n        goNextYear: function(isForward) {\n          var nextObj;\n          nextObj = bDateUtils.sourceCheckers.year.getNextAvailableYear(isForward, scope.data.viewedDate.year.number, scope.data.viewedDate.month.number, scope.dataStoreId);\n          if (nextObj) {\n            return scope.data.setViewedDate(nextObj.year, nextObj.month);\n          }\n        },\n        init: function(dateSource) {\n          var firstYear;\n          scope.data.setFormat(dateSource.format);\n          scope.data.setToday(dateSource.today);\n          if (scope.dateModel && !angular.equals({}, scope.dateModel)) {\n            return scope.data.setViewedDate(scope.dateModel.year, scope.dateModel.month, scope.dateModel.day);\n          } else if (bDateUtils.sourceCheckers.month.isMonthExist(dateSource.today.year, dateSource.today.month, scope.dataStoreId)) {\n            return scope.data.setViewedDate(dateSource.today.year, dateSource.today.month);\n          } else {\n            firstYear = bDateUtils.sourceCheckers.year.getFirstYear(scope.dataStoreId);\n            return scope.data.setViewedDate(firstYear, bDateUtils.sourceCheckers.month.getFirstMonth(firstYear, scope.dataStoreId));\n          }\n        }\n      };\n      (function() {\n        if (bDataFactory.isDataReady(bDataFactory.data, scope.dataStoreId)) {\n          scope.data.init(bDataFactory.data);\n        }\n        return scope.bDateUtils = bDateUtils;\n      })();\n      scope.$watch((function() {\n        return bDataFactory.data;\n      }), (function() {\n        if (bDataFactory.isDataReady(scope.dataStoreId)) {\n          return scope.data.init(bDataFactory.data);\n        }\n      }), true);\n      return scope.$watch('popupState.isOpen', function() {\n        if (scope.popupState.isOpen && (scope.dateModel && !angular.equals({}, scope.dateModel))) {\n          scope.data.setDateModel(scope.dateModel);\n          return scope.data.setViewedDate(scope.dateModel.year, scope.dateModel.month, scope.dateModel.day);\n        }\n      });\n    }\n  };\n}]);\n\nangular.module('bdate.utils', ['bdate.data']).factory('bDateUtils', ['MESSAGES', 'bDataFactory', function(MESSAGES, bDataFactory) {\n  var daysOfWeekList, exports, monthObj;\n  daysOfWeekList = [\n    {\n      name: 'Понедельник',\n      short: 'Пн'\n    }, {\n      name: 'Вторник',\n      short: 'Вт'\n    }, {\n      name: 'Среда',\n      short: 'Ср'\n    }, {\n      name: 'Четверг',\n      short: 'Чт'\n    }, {\n      name: 'Пятница',\n      short: 'Пт'\n    }, {\n      name: 'Суббота',\n      short: 'Сб'\n    }, {\n      name: 'Воскресенье',\n      short: 'Вс'\n    }\n  ];\n  monthObj = {\n    1: {\n      name: 'Январь',\n      short: 'Янв'\n    },\n    2: {\n      name: 'Февраль',\n      short: 'Фев'\n    },\n    3: {\n      name: 'Март',\n      short: 'Март'\n    },\n    4: {\n      name: 'Апрель',\n      short: 'Май'\n    },\n    5: {\n      name: 'Май',\n      short: 'Май'\n    },\n    6: {\n      name: 'Июнь',\n      short: 'Июнь'\n    },\n    7: {\n      name: 'Июль',\n      short: 'Июль'\n    },\n    8: {\n      name: 'Август',\n      short: 'Авг'\n    },\n    9: {\n      name: 'Сентябрь',\n      short: 'Сент'\n    },\n    10: {\n      name: 'Октябрь',\n      short: 'Окт'\n    },\n    11: {\n      name: 'Ноябрь',\n      short: 'Ноя'\n    },\n    12: {\n      name: 'Декабрь',\n      short: 'Дек'\n    }\n  };\n  return exports = {\n    daysOfWeek: daysOfWeekList,\n    month: monthObj,\n    getDaysOfWeekShorts: function() {\n      var i, result;\n      i = 0;\n      result = [];\n      while (i < daysOfWeekList.length) {\n        result.push(daysOfWeekList[i].short);\n        i++;\n      }\n      return result;\n    },\n    getMonthName: function(number) {\n      return exports.month[number].name;\n    },\n    makeDateModel: function(datetime) {\n      var date, day, month, year;\n      date = new Date(datetime);\n      day = date.getDate();\n      month = date.getMonth() + 1;\n      year = date.getFullYear();\n      return {\n        day: day,\n        month: month,\n        year: year\n      };\n    },\n    stringToDate: function(dateStr, format, delimiter) {\n      var dateItems, day, dayIndex, formatItems, formatLowerCase, month, monthIndex, year, yearIndex;\n      formatLowerCase = format.toLowerCase();\n      formatItems = formatLowerCase.split(delimiter);\n      dateItems = dateStr.split(delimiter);\n      monthIndex = formatItems.indexOf('mm');\n      dayIndex = formatItems.indexOf('dd');\n      yearIndex = formatItems.indexOf('yyyy');\n      year = +dateItems[yearIndex];\n      month = +dateItems[monthIndex] - 1;\n      day = +dateItems[dayIndex];\n      if (month > 12) {\n        return false;\n      }\n      if (day > 31) {\n        return false;\n      }\n      return new Date(year, month, day);\n    },\n    isValidDate: function(date) {\n      if (!angular.isDate) {\n        date = new Date(date);\n      }\n      if (isNaN(date.getTime())) {\n        return false;\n      }\n    },\n    sourceCheckers: {\n      month: {\n        isMonthExist: function(yearNum, monthNum, storeId) {\n          if (!yearNum || !monthNum) {\n            return console.error(MESSAGES.invalidParams);\n          }\n          yearNum = +yearNum;\n          monthNum = +monthNum;\n          if (!bDataFactory.isDataReady(storeId)) {\n            return false;\n          }\n          if (!bDataFactory.data[storeId].years[yearNum]) {\n            return false;\n          }\n          return !!bDataFactory.data[storeId].years[yearNum][monthNum];\n        },\n        isPrevMonthExist: function(yearNum, curMonthNum, storeId) {\n          var isFirstMonth, isFirstYear, lastMonthOfPrevYearNum, prevMonthNum, prevYearNum;\n          if (!yearNum || !curMonthNum) {\n            return false;\n          }\n          yearNum = +yearNum;\n          curMonthNum = +curMonthNum;\n          if (!exports.sourceCheckers.month.isMonthExist(yearNum, curMonthNum, storeId)) {\n            return false;\n          }\n          isFirstMonth = exports.sourceCheckers.month.isFirstMonth(yearNum, curMonthNum, storeId);\n          if (!isFirstMonth) {\n            prevMonthNum = curMonthNum - 1;\n            return exports.sourceCheckers.month.isMonthExist(yearNum, prevMonthNum, storeId);\n          } else {\n            isFirstYear = exports.sourceCheckers.year.isFirstYear(yearNum, storeId);\n            if (!isFirstYear) {\n              prevYearNum = yearNum - 1;\n              lastMonthOfPrevYearNum = exports.sourceCheckers.month.getLastMonth(prevYearNum, storeId);\n              return exports.sourceCheckers.month.isMonthExist(prevYearNum, lastMonthOfPrevYearNum, storeId);\n            } else {\n              return false;\n            }\n          }\n        },\n        getPrevMonthObj: function(yearNum, curMonthNum, storeId) {\n          var isFirstMonth, isFirstYear, lastMonthOfPrevYearNum, prevMonthNum, prevYearNum;\n          if (!yearNum || !curMonthNum) {\n            return console.error(MESSAGES.invalidParams);\n          }\n          yearNum = +yearNum;\n          curMonthNum = +curMonthNum;\n          isFirstMonth = exports.sourceCheckers.month.isFirstMonth(yearNum, curMonthNum, storeId);\n          if (!isFirstMonth) {\n            prevMonthNum = curMonthNum - 1;\n            if (exports.sourceCheckers.month.isMonthExist(yearNum, prevMonthNum, storeId)) {\n              return {\n                year: yearNum,\n                month: prevMonthNum\n              };\n            } else {\n              return null;\n            }\n          } else {\n            isFirstYear = exports.sourceCheckers.year.isFirstYear(yearNum, storeId);\n            if (!isFirstYear) {\n              prevYearNum = yearNum - 1;\n              lastMonthOfPrevYearNum = exports.sourceCheckers.month.getLastMonth(prevYearNum, storeId);\n              if (exports.sourceCheckers.month.isMonthExist(prevYearNum, lastMonthOfPrevYearNum, storeId)) {\n                return {\n                  year: prevYearNum,\n                  month: lastMonthOfPrevYearNum\n                };\n              } else {\n                return null;\n              }\n            } else {\n              return null;\n            }\n          }\n        },\n        isNextMonthExist: function(yearNum, curMonthNum, storeId) {\n          var firstMonthOfNextYearNum, isLastMonth, isLastYear, nextMonthNum, nextYearNum;\n          if (!yearNum || !curMonthNum) {\n            return false;\n          }\n          yearNum = +yearNum;\n          curMonthNum = +curMonthNum;\n          if (!exports.sourceCheckers.month.isMonthExist(yearNum, curMonthNum, storeId)) {\n            return false;\n          }\n          isLastMonth = exports.sourceCheckers.month.isLastMonth(yearNum, curMonthNum, storeId);\n          if (!isLastMonth) {\n            nextMonthNum = curMonthNum + 1;\n            return exports.sourceCheckers.month.isMonthExist(yearNum, nextMonthNum, storeId);\n          } else {\n            isLastYear = exports.sourceCheckers.year.isLastYear(yearNum, storeId);\n            if (!isLastYear) {\n              nextYearNum = yearNum + 1;\n              firstMonthOfNextYearNum = exports.sourceCheckers.month.getFirstMonth(nextYearNum, storeId);\n              return exports.sourceCheckers.month.isMonthExist(nextYearNum, firstMonthOfNextYearNum, storeId);\n            } else {\n              return false;\n            }\n          }\n        },\n        getNextMonthObj: function(yearNum, curMonthNum, storeId) {\n          var firstMonthOfNextYearNum, isLastMonth, isLastYear, nextMonthNum, nextYearNum;\n          if (!yearNum || !curMonthNum) {\n            return console.error(MESSAGES.invalidParams);\n          }\n          yearNum = +yearNum;\n          curMonthNum = +curMonthNum;\n          isLastMonth = exports.sourceCheckers.month.isLastMonth(yearNum, curMonthNum, storeId);\n          if (!isLastMonth) {\n            nextMonthNum = curMonthNum + 1;\n            if (exports.sourceCheckers.month.isMonthExist(yearNum, nextMonthNum, storeId)) {\n              return {\n                year: yearNum,\n                month: nextMonthNum\n              };\n            } else {\n              return null;\n            }\n          } else {\n            isLastYear = exports.sourceCheckers.year.isLastYear(yearNum, storeId);\n            if (!isLastYear) {\n              nextYearNum = yearNum + 1;\n              firstMonthOfNextYearNum = exports.sourceCheckers.month.getFirstMonth(nextYearNum, storeId);\n              if (exports.sourceCheckers.month.isMonthExist(nextYearNum, firstMonthOfNextYearNum, storeId)) {\n                return {\n                  year: nextYearNum,\n                  month: firstMonthOfNextYearNum\n                };\n              } else {\n                return null;\n              }\n            } else {\n              return null;\n            }\n          }\n        },\n        getMonth: function(yearNum, monthNum, storeId) {\n          if (!yearNum || !monthNum) {\n            return console.error(MESSAGES.invalidParams);\n          }\n          if (!bDataFactory.isDataReady(storeId)) {\n            return console.error(MESSAGES.dateNotReady);\n          }\n          return bDataFactory.data[storeId].years[yearNum][monthNum];\n        },\n        isFirstMonth: function(yearNum, monthNum, storeId) {\n          if (!bDataFactory.isDataReady(storeId)) {\n            return console.error(MESSAGES.dateNotReady);\n          }\n          yearNum = +yearNum;\n          monthNum = +monthNum;\n          return monthNum === +Object.keys(bDataFactory.data[storeId].years[yearNum])[0];\n        },\n        getFirstMonth: function(yearNum, storeId) {\n          if (!bDataFactory.isDataReady(storeId)) {\n            return console.error(MESSAGES.dateNotReady);\n          }\n          yearNum = +yearNum;\n          return +Object.keys(bDataFactory.data[storeId].years[yearNum])[0];\n        },\n        isLastMonth: function(yearNum, monthNum, storeId) {\n          if (!bDataFactory.isDataReady(storeId)) {\n            return console.error(MESSAGES.dateNotReady);\n          }\n          yearNum = +yearNum;\n          monthNum = +monthNum;\n          return monthNum === +Object.keys(bDataFactory.data[storeId].years[yearNum])[Object.keys(bDataFactory.data[storeId].years[yearNum]).length - 1];\n        },\n        getLastMonth: function(yearNum, storeId) {\n          if (!bDataFactory.isDataReady(storeId)) {\n            return console.error(MESSAGES.dateNotReady);\n          }\n          yearNum = +yearNum;\n          return +Object.keys(bDataFactory.data[storeId].years[yearNum])[Object.keys(bDataFactory.data[storeId].years[yearNum]).length - 1];\n        },\n        getNextAvailableMonth: function(isForward, yearNum, monthNum, storeId) {\n          var isFirstMonth, isLastMonth, nextMonthNum, nextYearNum, result;\n          yearNum = +yearNum;\n          monthNum = +monthNum;\n          isFirstMonth = exports.sourceCheckers.month.isFirstMonth(yearNum, monthNum, storeId);\n          isLastMonth = exports.sourceCheckers.month.isLastMonth(yearNum, monthNum, storeId);\n          nextYearNum = yearNum;\n          nextMonthNum = monthNum;\n          if (isForward) {\n            if (!isLastMonth) {\n              nextMonthNum = monthNum + 1;\n            } else {\n              nextYearNum = yearNum + 1;\n              if (exports.sourceCheckers.year.isYearExist(nextYearNum, storeId)) {\n                nextMonthNum = exports.sourceCheckers.month.getFirstMonth(nextYearNum, storeId);\n              } else {\n                console.error(MESSAGES.errorOnChangeMonthOrYear);\n                return false;\n              }\n            }\n          } else if (!isForward) {\n            if (!isFirstMonth) {\n              nextMonthNum = monthNum - 1;\n            } else {\n              nextYearNum = yearNum - 1;\n              if (exports.sourceCheckers.year.isYearExist(nextYearNum, storeId)) {\n                nextMonthNum = exports.sourceCheckers.month.getLastMonth(nextYearNum, storeId);\n              } else {\n                console.error(MESSAGES.errorOnChangeMonthOrYear);\n                return false;\n              }\n            }\n          }\n          return result = {\n            year: nextYearNum,\n            month: nextMonthNum\n          };\n        }\n      },\n      year: {\n        isYearExist: function(yearNum, storeId) {\n          if (!yearNum) {\n            return console.error(MESSAGES.invalidParams);\n          }\n          if (!bDataFactory.isDataReady(storeId)) {\n            return false;\n          }\n          yearNum = +yearNum;\n          return !!bDataFactory.data[storeId].years[yearNum];\n        },\n        getYear: function(yearNum, storeId) {\n          if (!yearNum) {\n            return console.error(MESSAGES.invalidParams);\n          }\n          if (!bDataFactory.isDataReady(storeId)) {\n            return console.error(MESSAGES.dateNotReady);\n          }\n          return bDataFactory.data[storeId].years[yearNum];\n        },\n        isFirstYear: function(yearNum, storeId) {\n          yearNum = +yearNum;\n          return yearNum === +Object.keys(bDataFactory.data[storeId].years)[0];\n        },\n        getFirstYear: function(storeId) {\n          if (!bDataFactory.isDataReady(storeId)) {\n            return console.error(MESSAGES.dateNotReady);\n          }\n          return +Object.keys(bDataFactory.data[storeId].years)[0];\n        },\n        isLastYear: function(yearNum, storeId) {\n          if (!bDataFactory.isDataReady(storeId)) {\n            return console.error(MESSAGES.dateNotReady);\n          }\n          yearNum = +yearNum;\n          return yearNum === +Object.keys(bDataFactory.data[storeId].years)[Object.keys(bDataFactory.data[storeId].years).length - 1];\n        },\n        getLastYear: function(storeId) {\n          if (!bDataFactory.isDataReady(storeId)) {\n            return console.error(MESSAGES.dateNotReady);\n          }\n          return +Object.keys(bDataFactory.data[storeId].years)[Object.keys(bDataFactory.data[storeId].years).length - 1];\n        },\n        getNextAvailableYear: function(isForward, yearNum, monthNum, storeId) {\n          var isFirstYear, isLastYear, nextMonthNum, nextYearNum, result;\n          yearNum = +yearNum;\n          monthNum = +monthNum;\n          isFirstYear = exports.sourceCheckers.year.isFirstYear(yearNum, storeId);\n          isLastYear = exports.sourceCheckers.year.isLastYear(yearNum, storeId);\n          nextYearNum = yearNum;\n          nextMonthNum = monthNum;\n          if (isForward) {\n            if (!isLastYear) {\n              nextYearNum = yearNum + 1;\n              if (exports.sourceCheckers.month.isMonthExist(nextYearNum, monthNum, storeId)) {\n                nextMonthNum = monthNum;\n              } else {\n                nextMonthNum = exports.sourceCheckers.month.getFirstMonth(nextYearNum, storeId);\n              }\n            } else {\n              return false;\n            }\n          } else if (!isForward) {\n            if (!isFirstYear) {\n              nextYearNum = yearNum - 1;\n              if (exports.sourceCheckers.month.isMonthExist(nextYearNum, monthNum, storeId)) {\n                nextMonthNum = monthNum;\n              } else {\n                nextMonthNum = exports.sourceCheckers.month.getFirstMonth(nextYearNum, storeId);\n              }\n            } else {\n              return false;\n            }\n          }\n          return result = {\n            year: nextYearNum,\n            month: nextMonthNum\n          };\n        }\n      }\n    }\n  };\n}]);\n\nangular.module(\"bdate.templates\", []).run([\"$templateCache\", function($templateCache) {$templateCache.put(\"bdate.html\",\"<div id={{::bRootId}} ng-class=\\\"{b_datepicker_in_progress: !isDataReady}\\\" class=\\\"b_datepicker_root {{::bRootClasses}}\\\"><input type=text id={{::bInputId}} ng-model=date.viewed ng-click=popup.togglePopup() ng-disabled=!isDataReady readonly=readonly class=\\\"b_datepicker_input {{::bInputClasses}}\\\"><button type=button ng-click=popup.togglePopup() ng-disabled=!isDataReady class=\\\"b_datepicker_button {{::bButtonClasses}}\\\">&nbsp;</button><bdate-popup id={{::bPopupId}} popup-state=popup.state date-model=date.model data-store-id=::dataStoreId class={{::bPopupClasses}}></bdate-popup></div>\");\n$templateCache.put(\"popup.html\",\"<div ng-show=popupState.isOpen class=b_popup><div class=b_popup_controls><div class=b_btn_prev_container><button type=button ng-click=data.goNextYear(false) ng-disabled=\\\"!bDateUtils.sourceCheckers.year.isYearExist(data.viewedDate.year.number - 1, dataStoreId)\\\" class=\\\"b_popup_btn b_btn_prev\\\">&#9664;&#9664;</button><button type=button ng-click=data.goNextMonth(false) ng-disabled=\\\"!bDateUtils.sourceCheckers.month.isPrevMonthExist(data.viewedDate.year.number, data.viewedDate.month.number, dataStoreId)\\\" class=\\\"b_popup_btn b_btn_prev\\\">&#9664;</button></div><div ng-bind=data.viewedDate.month.name class=b_popup_month></div>&nbsp;<div ng-bind=data.viewedDate.year.number class=b_popup_year></div><div class=b_btn_next_container><button type=button ng-click=data.goNextMonth(true) ng-disabled=\\\"!bDateUtils.sourceCheckers.month.isNextMonthExist(data.viewedDate.year.number, data.viewedDate.month.number, dataStoreId)\\\" class=\\\"b_popup_btn b_btn_next\\\">&#9654;</button><button type=button ng-click=data.goNextYear(true) ng-disabled=\\\"!bDateUtils.sourceCheckers.year.isYearExist(data.viewedDate.year.number + 1, dataStoreId)\\\" class=\\\"b_popup_btn b_btn_next\\\">&#9654;&#9654;</button></div></div><table class=b_popup_days><tr><td ng-repeat=\\\"dayOfWeek in ::data.daysOfWeek.getShorts()\\\" class=b_popup_day_of_week><span ng-bind=::dayOfWeek></span></td></tr></table><table class=b_popup_weeks><tr class=b_popup_week><td ng-repeat=\\\"date in data.viewedDate.days track by $index\\\" ng-class=\\\"{b_popup_today_day_container: date.isToday}\\\" class=b_popup_day><button type=button ng-bind=date.day ng-click=popup.selectDate(date) ng-disabled=date.isLocked ng-class=\\\"{b_popup_cur_month_day: !date.isOtherMonth, b_popup_today_day: date.isToday, b_popup_selected_day: date.day == dateModel.day &amp;&amp; date.month == dateModel.month &amp;&amp; date.year == dateModel.year, b_popup_locked_day: date.isLocked}\\\" class=b_popup_day_btn></button></td></tr></table><div ng-show=\\\"bDateUtils.isMonthExist(data.today.year, data.today.month, dataStoreId)\\\" class=b_popup_today>Сегодня<button type=button ng-bind=\\\"data.today.date | date:data.format\\\" ng-click=popup.selectDate(bDateUtils.makeDateModel(data.today.date)) class=b_popup_today_btn></button></div></div>\");}]);"],"sourceRoot":"/source/"}