{"version":3,"sources":["bdate.js"],"names":["angular","module","directive","$document","$filter","restrict","templateUrl","scope","bModel","bSource","bRootClasses","bInputClasses","bButtonClasses","bPopupClasses","bMonthNames","bDaysNames","placeholder","bRefresh","controller","$scope","getFormattedDate","state","isDataReady","data","date","$watch","dmy","datetime","Date","year","month","day","getTime","format","newVal","oldVal","equals","popupResult","link","elem","processClick","viewed","model","event","clickedElem","isOpen","isOutsideClick","popupElem","popup","target","contains","$apply","hidePopup","clear","togglePopup","bRefreshTest","m","y","on","replace","popupState","popupSource","popupRefresh","selectDate","goPrevYear","selected","isStart","console","error","num","refreshSelectedData","isFirstYear","goPrevMonth","december","isFirstMonth","goNextMonth","january","isEnd","isLastMonth","goNextYear","isLastYear","isSelectedDay","getTodayDateTime","today","isDayInSelectedMonth","goToYear","run","$templateCache","put"],"mappings":"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","file":"bdate.min.js","sourcesContent":["angular.module('bdate', ['bdate.popup', 'bdate.templates']).directive('bdatepicker', ['$document', '$filter', function($document, $filter) {\n  return {\n    restrict: 'E',\n    templateUrl: 'bdate.html',\n    scope: {\n      bModel: '=',\n      bSource: '=',\n      bRootClasses: '@?',\n      bInputClasses: '@?',\n      bButtonClasses: '@?',\n      bPopupClasses: '@?',\n      bMonthNames: '=?',\n      bDaysNames: '=?',\n      placeholder: '@?',\n      bRefresh: \"&?\"\n    },\n    controller: ['$scope', function($scope) {\n      var getFormattedDate;\n      $scope.state = {\n        isDataReady: false\n      };\n      $scope.data = {\n        date: null\n      };\n      $scope.$watch('bSource', function() {\n        return $scope.isDataReady = true;\n      }, true);\n      getFormattedDate = function(dmy) {\n        var datetime;\n        datetime = new Date(dmy.year, dmy.month - 1, dmy.day).getTime();\n        return $filter('date')(datetime, $scope.bSource.format);\n      };\n      return $scope.$watch('popupResult', function(newVal, oldVal) {\n        if (newVal === oldVal) {\n          return;\n        }\n        if (!newVal) {\n          return;\n        }\n        if (angular.equals({}, newVal)) {\n          return;\n        }\n        return $scope.bModel = getFormattedDate($scope.popupResult);\n      }, true);\n    }],\n    link: function(scope, elem) {\n      var processClick;\n      scope.date = {\n        viewed: '',\n        model: {}\n      };\n      processClick = function(event) {\n        var clickedElem, isOpen, isOutsideClick, popupElem;\n        isOpen = scope.popup.state.isOpen;\n        clickedElem = event.target;\n        popupElem = elem;\n        isOutsideClick = (popupElem !== clickedElem) && !(popupElem[0].contains(clickedElem));\n        if (isOpen && isOutsideClick) {\n          return scope.$apply(function() {\n            return scope.popup.hidePopup();\n          });\n        }\n      };\n      scope.clear = function() {\n        scope.bModel = null;\n        return scope.popupResult = null;\n      };\n      scope.popup = {\n        state: {\n          isOpen: false\n        },\n        togglePopup: function() {\n          if (!scope.isDataReady) {\n            return;\n          }\n          return scope.popup.state.isOpen = !scope.popup.state.isOpen;\n        },\n        hidePopup: function() {\n          return scope.popup.state.isOpen = false;\n        }\n      };\n      (function() {\n        return scope.bRefresh();\n      })();\n      scope.bRefreshTest = function(m, y) {\n        return scope.bRefresh({\n          m: m,\n          y: y\n        });\n      };\n      return $document.on('click', processClick);\n    }\n  };\n}]);\n\nangular.module('bdate.popup', ['bdate.templates']).directive('bdatePopup', function() {\n  return {\n    restrict: 'E',\n    replace: true,\n    templateUrl: 'popup.html',\n    scope: {\n      popupState: '=',\n      popupSource: '=',\n      popupResult: '=',\n      popupRefresh: \"&?\"\n    },\n    link: function(scope) {\n      scope.popup = {\n        hidePopup: function() {\n          return scope.popupState.isOpen = false;\n        },\n        selectDate: function(date) {\n          scope.popupResult = date;\n          return scope.popup.hidePopup();\n        },\n        goPrevYear: function() {\n          var month, year;\n          if (!scope.popupSource.selected || !scope.popupSource.selected.year) {\n            return;\n          }\n          if (scope.popupSource.selected.year.isStart) {\n            console.error('error');\n            return false;\n          }\n          year = scope.popupSource.selected.year.num - 1;\n          month = scope.popupSource.selected.month.num;\n          return scope.popup.refreshSelectedData(month, year);\n        },\n        isFirstYear: function() {\n          if (!scope.popupSource || !scope.popupSource.selected) {\n            return;\n          }\n          return scope.popupSource.selected.year.isStart;\n        },\n        goPrevMonth: function() {\n          var december, month, year;\n          if (!scope.popupSource.selected || !scope.popupSource.selected.year) {\n            return;\n          }\n          if (scope.popupSource.selected.month.isStart && scope.popupSource.selected.year.isStart) {\n            console.error('error');\n            return false;\n          }\n          december = 12;\n          month = scope.popupSource.selected.month.num;\n          if (scope.popupSource.selected.month.isStart) {\n            year = scope.popupSource.selected.year.num - 1;\n            month = december;\n          } else if (scope.popupSource.selected.month.isStart && scope.popupSource.selected.year.isStart) {\n            console.error('error');\n            return false;\n          } else {\n            year = scope.popupSource.selected.year.num;\n            month = scope.popupSource.selected.month.num - 1;\n          }\n          return scope.popup.refreshSelectedData(month, year);\n        },\n        isFirstMonth: function() {\n          if (!scope.popupSource || !scope.popupSource.selected) {\n            return;\n          }\n          return scope.popupSource.selected.month.isStart;\n        },\n        goNextMonth: function() {\n          var january, month, year;\n          if (!scope.popupSource.selected || !scope.popupSource.selected.year) {\n            return;\n          }\n          if (scope.popupSource.selected.month.isEnd && scope.popupSource.selected.year.isEnd) {\n            console.error('error');\n            return false;\n          }\n          january = 1;\n          month = scope.popupSource.selected.month.num;\n          if (scope.popupSource.selected.month.isEnd) {\n            year = scope.popupSource.selected.year.num + 1;\n            month = january;\n          } else if (scope.popupSource.selected.month.isEnd && scope.popupSource.selected.year.isEnd) {\n            console.error('error');\n            return false;\n          } else {\n            year = scope.popupSource.selected.year.num;\n            month = scope.popupSource.selected.month.num + 1;\n          }\n          return scope.popup.refreshSelectedData(month, year);\n        },\n        isLastMonth: function() {\n          if (!scope.popupSource || !scope.popupSource.selected) {\n            return;\n          }\n          return scope.popupSource.selected.month.isEnd;\n        },\n        goNextYear: function() {\n          var month, year;\n          if (!scope.popupSource.selected || !scope.popupSource.selected.year) {\n            return;\n          }\n          if (scope.popupSource.selected.year.isEnd) {\n            console.error('error');\n            return false;\n          }\n          year = scope.popupSource.selected.year.num + 1;\n          month = scope.popupSource.selected.month.num;\n          return scope.popup.refreshSelectedData(month, year);\n        },\n        isLastYear: function() {\n          if (!scope.popupSource || !scope.popupSource.selected) {\n            return;\n          }\n          return scope.popupSource.selected.year.isEnd;\n        },\n        isSelectedDay: function(date) {\n          if (!scope.popupResult || !scope.popupResult.day) {\n            return;\n          }\n          return (date.day === scope.popupResult.day) && (date.month === scope.popupResult.month) && (date.year === scope.popupResult.year);\n        },\n        getTodayDateTime: function() {\n          var today;\n          if (!scope.popupSource || !scope.popupSource.today) {\n            return;\n          }\n          today = scope.popupSource.today;\n          return new Date(today.year, today.month - 1, today.day).getTime();\n        },\n        isDayInSelectedMonth: function(date) {\n          return (date.month === scope.popupSource.selected.month.num) && (date.year === scope.popupSource.selected.year.num);\n        },\n        goToYear: function() {\n          var month, year;\n          year = scope.popupSource.selected.year.num;\n          month = scope.popupSource.selected.month.num;\n          return scope.popup.refreshSelectedData(month, year);\n        },\n        refreshSelectedData: function(month, year) {\n          return scope.popupRefresh({\n            m: month,\n            y: year\n          });\n        }\n      };\n      return scope.$watch('popupSource', function() {\n        return scope.isDataReady = true;\n      }, true);\n    }\n  };\n});\n\nangular.module(\"bdate.templates\", []).run([\"$templateCache\", function($templateCache) {$templateCache.put(\"bdate.html\",\"<div ng-class=\\\"{b_datepicker_in_progress: !isDataReady}\\\" class=\\\"b_datepicker_root {{::bRootClasses}}\\\"><input type=text ng-model=bModel placeholder={{placeholder}} ng-click=popup.togglePopup() ng-disabled=!isDataReady readonly=readonly class=\\\"b_datepicker_input {{::bInputClasses}}\\\"><button type=button ng-click=clear() class=\\\"b_clear_btn {{::bButtonClasses}}\\\">&times;</button><button type=button ng-click=popup.togglePopup() ng-disabled=!isDataReady class=\\\"b_datepicker_button b_calendar_btn {{::bButtonClasses}}\\\">&nbsp;</button><bdate-popup popup-state=popup.state popup-source=bSource popup-result=popupResult popup-refresh=\\\"bRefreshTest(m, y)\\\" class={{::bPopupClasses}}></bdate-popup></div>\");\n$templateCache.put(\"popup.html\",\"<div ng-show=popupState.isOpen class=b_popup><div class=b_popup_controls><div class=b_btn_prev_container><button type=button ng-click=popup.goPrevYear() ng-disabled=popup.isFirstYear() class=\\\"b_popup_btn b_btn_prev\\\">&#9664; &#9664;</button><button type=button ng-click=popup.goPrevMonth() ng-disabled=\\\"popup.isFirstMonth() &amp;&amp; popup.isFirstYear()\\\" class=\\\"b_popup_btn b_btn_prev\\\">&#9664;</button></div><div ng-bind=popupSource.selected.month.name class=b_popup_month></div>&nbsp;<select ng-model=popupSource.selected.year.num ng-options=\\\"year for year in popupSource.years\\\" ng-init=\\\"year = popupSource.selected.year.num\\\" ng-change=popup.goToYear() class=b_popup_year></select><div class=b_btn_next_container><button type=button ng-click=popup.goNextMonth() ng-disabled=\\\"popup.isLastMonth() &amp;&amp; popup.isLastYear()\\\" class=\\\"b_popup_btn b_btn_next\\\">&#9654;</button><button type=button ng-click=popup.goNextYear() ng-disabled=popup.isLastYear() class=\\\"b_popup_btn b_btn_next\\\">&#9654; &#9654;</button></div></div><table class=b_popup_days><tr><td ng-repeat=\\\"dayOfWeek in ::popupSource.week\\\" class=b_popup_day_of_week><span ng-bind=::dayOfWeek></span></td></tr></table><table class=b_popup_weeks><tr class=b_popup_week><td ng-repeat=\\\"date in popupSource.selected.dates track by $index\\\" ng-class=\\\"{b_popup_today_day_container: date.isToday}\\\" class=b_popup_day><button type=button ng-bind=date.day ng-click=popup.selectDate(date) ng-disabled=date.isDisabled ng-class=\\\"{b_popup_day_in_selected_month: popup.isDayInSelectedMonth(date), b_popup_today_day: date.isToday, b_popup_selected_day: popup.isSelectedDay(date)}\\\" class=b_popup_day_btn></button></td></tr></table><div ng-show=popupSource.today class=b_popup_today><button type=button ng-bind=\\\"popup.getTodayDateTime() | date:popupSource.format\\\" ng-click=popup.selectDate(popupSource.today) class=b_popup_today_btn></button></div></div>\");}]);"],"sourceRoot":"/source/"}