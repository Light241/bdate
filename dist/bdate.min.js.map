{"version":3,"sources":["bdate.js"],"names":["angular","module","directive","$filter","bDataFactory","bDateUtils","$document","$interval","restrict","replace","templateUrl","scope","bModel","bSource","bRootId","bInputId","bPopupId","bRootClasses","bInputClasses","bButtonClasses","bPopupClasses","bMonthNames","bDaysNames","controller","$scope","_generateRandomId","Math","random","toString","substring","dateStoreId","isDataReady","$watch","isDataValid","setData","link","elem","doNotUpdateModelTwice","externalLoadInterval","processClick","setModelFromExternal","date","viewed","model","bModelDate","isEmptyModel","isSameDate","stringToDate","data","format","delimiter","isDate","day","getDate","month","getMonth","year","getFullYear","cancel","newVal","oldVal","dateTime","formattedDate","equals","Date","getTime","event","clickedElem","isOpen","isOutsideClick","popupElem","popup","state","target","contains","$apply","hidePopup","on","togglePopup","factory","MESSAGES","exports","daysNames","name","short","setDaysNames","daysNamesArr","isDaysNamesValid","console","error","daysNameNotValid","isArray","isObject","length","monthNames",1,2,3,4,5,6,7,8,9,10,11,12,"setMonthNames","monthNamesObj","monthNameNotValid","isMonthNamesValid","storeId","invalidParams","today","years","Object","keys","source","JSON","parse","stringify","sourceDataNotValid","constant","errorOnChangeMonthOrYear","dateNotReady","popupState","dateModel","selectDate","setDateModel","setFormat","viewedDate","setViewedDate","yearNum","monthNum","dayNum","first","last","number","count","daysTotal","days_total","startDay","start_day","getMonthName","days","getDaysArr","daysOfWeek","get","getShorts","getDaysOfWeekShorts","setToday","_getPrevMonthTailDaysArr","i","isPrevMonthExist","prevMonthDate","prevMonthDaysCount","result","sourceCheckers","getPrevMonthObj","unshift","isOtherMonth","isLocked","_getNextMonthTailDaysArr","daysCount","daysArr","daysInWeek","expectedWeeksCount","isNextMonthExist","nextMonthDate","ceil","floor","getNextMonthObj","push","_getMonthDaysArr","_markToday","isToday","currentMonthDaysArr","nextMonthTailDaysArr","prevMonthTailDaysArr","concat","goNextMonth","isForward","nextObj","getNextAvailableMonth","goNextYear","getNextAvailableYear","init","dateSource","firstYear","isMonthExist","getFirstYear","getFirstMonth","makeDateModel","datetime","dateStr","dateItems","dayIndex","formatItems","formatLowerCase","monthIndex","yearIndex","toLowerCase","split","indexOf","isValidDate","isNaN","curMonthNum","isFirstMonth","isFirstYear","lastMonthOfPrevYearNum","prevMonthNum","prevYearNum","getLastMonth","firstMonthOfNextYearNum","isLastMonth","isLastYear","nextMonthNum","nextYearNum","isYearExist","getYear","getLastYear","run","$templateCache","put"],"mappings":"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","file":"bdate.min.js","sourcesContent":["angular.module('bdate.datepicker', ['bdate.popup', 'bdate.data', 'bdate.templates']).directive('bdatepicker', ['$filter', 'bDataFactory', 'bDateUtils', '$document', '$interval', function($filter, bDataFactory, bDateUtils, $document, $interval) {\n  return {\n    restrict: 'E',\n    replace: true,\n    templateUrl: 'bdate.html',\n    scope: {\n      bModel: '=',\n      bSource: '=',\n      bRootId: '@?',\n      bInputId: '@?',\n      bPopupId: '@?',\n      bRootClasses: '@?',\n      bInputClasses: '@?',\n      bButtonClasses: '@?',\n      bPopupClasses: '@?',\n      bMonthNames: '@?',\n      bDaysNames: '@?'\n    },\n    controller: ['$scope', function($scope) {\n      var _generateRandomId;\n      _generateRandomId = function() {\n        return Math.random().toString(36).substring(12);\n      };\n      $scope.dateStoreId = _generateRandomId();\n      $scope.isDataReady = false;\n      return $scope.$watch('bSource', function() {\n        if (bDataFactory.isDataValid($scope.bSource)) {\n          bDataFactory.setData($scope.bSource, $scope.dateStoreId);\n          return $scope.isDataReady = true;\n        }\n      }, true);\n    }],\n    link: function(scope, elem) {\n      var doNotUpdateModelTwice, externalLoadInterval, processClick, setModelFromExternal;\n      scope.date = {\n        viewed: '',\n        model: {}\n      };\n      doNotUpdateModelTwice = false;\n      setModelFromExternal = function() {\n        var bModelDate, isEmptyModel, isSameDate;\n        isSameDate = scope.bModel === scope.date.viewed;\n        isEmptyModel = scope.bModel === '' || scope.bModel === ' ' || !scope.bModel;\n        if (isSameDate || isEmptyModel) {\n          return false;\n        }\n        bModelDate = bDateUtils.stringToDate(scope.bModel, bDataFactory.data[scope.dateStoreId].format, bDataFactory.data[scope.dateStoreId].delimiter);\n        if (!angular.isDate(bModelDate)) {\n          return false;\n        }\n        scope.date.viewed = scope.bModel;\n        doNotUpdateModelTwice = true;\n        return scope.date.model = {\n          day: bModelDate.getDate(),\n          month: bModelDate.getMonth() + 1,\n          year: bModelDate.getFullYear()\n        };\n      };\n      externalLoadInterval = $interval((function() {\n        if (scope.isDataReady) {\n          setModelFromExternal();\n          $interval.cancel(externalLoadInterval);\n          return externalLoadInterval = void 0;\n        }\n      }), 60);\n      scope.$watch('bModel', function(newVal, oldVal) {\n        if (newVal === oldVal) {\n          return;\n        }\n        return setModelFromExternal();\n      });\n      scope.$watch('date.model', function() {\n        var dateTime, formattedDate;\n        if (angular.equals({}, scope.date.model)) {\n          return;\n        }\n        if (doNotUpdateModelTwice) {\n          return doNotUpdateModelTwice = false;\n        }\n        dateTime = new Date(scope.date.model.year, scope.date.model.month - 1, scope.date.model.day).getTime();\n        formattedDate = $filter('date')(dateTime, bDataFactory.data[scope.dateStoreId].format);\n        scope.date.viewed = formattedDate;\n        return scope.bModel = scope.date.viewed;\n      });\n      processClick = function(event) {\n        var clickedElem, isOpen, isOutsideClick, popupElem;\n        isOpen = scope.popup.state.isOpen;\n        clickedElem = event.target;\n        popupElem = elem;\n        isOutsideClick = (popupElem !== clickedElem) && !(popupElem[0].contains(clickedElem));\n        if (isOpen && isOutsideClick) {\n          return scope.$apply(function() {\n            return scope.popup.hidePopup();\n          });\n        }\n      };\n      $document.on('click', processClick);\n      return scope.popup = {\n        state: {\n          isOpen: false\n        },\n        togglePopup: function() {\n          if (!scope.isDataReady) {\n            return;\n          }\n          return scope.popup.state.isOpen = !scope.popup.state.isOpen;\n        },\n        hidePopup: function() {\n          return scope.popup.state.isOpen = false;\n        }\n      };\n    }\n  };\n}]);\n\nangular.module('bdate.data', []).factory('bDataFactory', ['MESSAGES', function(MESSAGES) {\n  var exports;\n  return exports = {\n    data: {},\n    daysNames: [\n      {\n        name: 'Monday',\n        short: 'Mon'\n      }, {\n        name: 'Tuesday',\n        short: 'Tue'\n      }, {\n        name: 'Wednesday',\n        short: 'Wed'\n      }, {\n        name: 'Thursday',\n        short: 'Th'\n      }, {\n        name: 'Friday',\n        short: 'Fri'\n      }, {\n        name: 'Saturday',\n        short: 'Sat'\n      }, {\n        name: 'Sunday',\n        short: 'Sun'\n      }\n    ],\n    setDaysNames: function(daysNamesArr) {\n      if (!exports.isDaysNamesValid(daysNamesArr)) {\n        console.error(MESSAGES.daysNameNotValid);\n        return false;\n      }\n      return exports.daysNames = daysNamesArr;\n    },\n    isDaysNamesValid: function(daysNamesArr) {\n      if (!angular.isArray(daysNamesArr) && angular.isObject(daysNamesArr)) {\n        return false;\n      }\n      if (daysNamesArr.length !== 7) {\n        return false;\n      }\n      if (!daysNamesArr[0].name) {\n        return false;\n      }\n      if (!daysNamesArr[0].short) {\n        return false;\n      }\n      return true;\n    },\n    monthNames: {\n      1: {\n        name: 'January',\n        short: 'Jan'\n      },\n      2: {\n        name: 'February',\n        short: 'Feb'\n      },\n      3: {\n        name: 'March',\n        short: 'Mar'\n      },\n      4: {\n        name: 'April',\n        short: 'Apr'\n      },\n      5: {\n        name: 'May',\n        short: 'May'\n      },\n      6: {\n        name: 'June',\n        short: 'Jun'\n      },\n      7: {\n        name: 'July',\n        short: 'July'\n      },\n      8: {\n        name: 'August',\n        short: 'Aug'\n      },\n      9: {\n        name: 'September',\n        short: 'Sep'\n      },\n      10: {\n        name: 'October',\n        short: 'Oct'\n      },\n      11: {\n        name: 'November',\n        short: 'Nov'\n      },\n      12: {\n        name: 'December',\n        short: 'Dec'\n      }\n    },\n    setMonthNames: function(monthNamesObj) {\n      if (!exports.isDaysNamesValid(monthNamesObj)) {\n        console.error(MESSAGES.monthNameNotValid);\n        return false;\n      }\n      return exports.monthNames = monthNamesObj;\n    },\n    isMonthNamesValid: function(monthNamesObj) {\n      if (angular.isArray(monthNamesObj) && !angular.isObject(monthNamesObj)) {\n        return false;\n      }\n      if (monthNamesObj.length !== 12) {\n        return false;\n      }\n      if (!monthNamesObj[0].name) {\n        return false;\n      }\n      if (!monthNamesObj[0].short) {\n        return false;\n      }\n      return true;\n    },\n    isDataReady: function(storeId) {\n      if (!storeId) {\n        return console.error(MESSAGES.invalidParams);\n      }\n      return !!exports.data[storeId] && exports.isDataValid(exports.data[storeId]);\n    },\n    isDataValid: function(data) {\n      if (!data || (angular.equals({}, data))) {\n        return false;\n      }\n      if (!data.format) {\n        return false;\n      }\n      if (!data.delimiter) {\n        return false;\n      }\n      if (!data.today) {\n        return false;\n      }\n      if (!data.years) {\n        return false;\n      }\n      if (!Object.keys(data.years)[0]) {\n        return false;\n      }\n      if (!Object.keys(Object.keys(data.years)[0])[0]) {\n        return false;\n      }\n      return true;\n    },\n    setData: function(source, storeId) {\n      if (!exports.isDataValid(source)) {\n        console.error(MESSAGES.sourceDataNotValid);\n        return false;\n      }\n      exports.data[storeId] = JSON.parse(JSON.stringify(source));\n      exports.data[storeId].today.date = exports.data[storeId].today.date * 1000;\n      return exports.data[storeId];\n    }\n  };\n}]);\n\nangular.module('bdate', ['bdate.datepicker']).constant('MESSAGES', {\n  invalidParams: 'Invalid params',\n  errorOnChangeMonthOrYear: 'cannot change month or year',\n  sourceDataNotValid: 'source data(json)is not valid',\n  dateNotReady: 'source data(json)is not ready(null?)',\n  daysNameNotValid: 'days name array not valid',\n  monthNameNotValid: 'month name array not valid'\n});\n\nangular.module('bdate.popup', ['bdate.utils', 'bdate.data', 'bdate.templates']).directive('bdatePopup', ['bDateUtils', 'bDataFactory', 'MESSAGES', function(bDateUtils, bDataFactory, MESSAGES) {\n  return {\n    restrict: 'E',\n    replace: true,\n    templateUrl: 'popup.html',\n    scope: {\n      popupState: '=',\n      dateModel: '=',\n      dateStoreId: '@?'\n    },\n    link: function(scope) {\n      scope.popup = {\n        hidePopup: function() {\n          return scope.popupState.isOpen = false;\n        },\n        selectDate: function(date) {\n          scope.data.setDateModel(date);\n          return scope.popup.hidePopup();\n        }\n      };\n      scope.data = {\n        setDateModel: function(dateModel) {\n          if (!dateModel) {\n            return console.error(MESSAGES.invalidParams);\n          }\n          return scope.dateModel = dateModel;\n        },\n        format: null,\n        setFormat: function(format) {\n          if (!format) {\n            return console.error(MESSAGES.invalidParams);\n          }\n          return scope.data.format = format;\n        },\n        viewedDate: null,\n        setViewedDate: function(yearNum, monthNum, dayNum) {\n          if (!yearNum || !monthNum) {\n            return console.error(MESSAGES.invalidParams);\n          }\n          yearNum = +yearNum;\n          monthNum = +monthNum;\n          scope.data.viewedDate = {\n            year: {\n              first: +Object.keys(bDataFactory.data[scope.dateStoreId].years)[0],\n              last: +Object.keys(bDataFactory.data[scope.dateStoreId].years)[Object.keys(bDataFactory.data[scope.dateStoreId].years).length - 1],\n              number: +yearNum,\n              count: +Object.keys(bDataFactory.data[scope.dateStoreId].years).length\n            },\n            month: {\n              first: +Object.keys(bDataFactory.data[scope.dateStoreId].years[yearNum])[0],\n              last: +Object.keys(bDataFactory.data[scope.dateStoreId].years[yearNum])[Object.keys(bDataFactory.data[scope.dateStoreId].years[yearNum]).length - 1],\n              daysTotal: +bDataFactory.data[scope.dateStoreId].years[yearNum][monthNum].days_total,\n              startDay: +bDataFactory.data[scope.dateStoreId].years[yearNum][monthNum].start_day,\n              number: +monthNum,\n              name: bDateUtils.getMonthName(monthNum),\n              count: +Object.keys(bDataFactory.data[scope.dateStoreId].years[yearNum]).length\n            },\n            day: {\n              number: +dayNum\n            }\n          };\n          return scope.data.viewedDate.days = scope.data.getDaysArr(scope.data.viewedDate.year, scope.data.viewedDate.month);\n        },\n        daysOfWeek: {\n          get: function() {\n            return bDateUtils.daysOfWeek;\n          },\n          getShorts: function() {\n            return bDateUtils.getDaysOfWeekShorts();\n          }\n        },\n        today: null,\n        setToday: function(today) {\n          if (!today) {\n            return console.error(MESSAGES.invalidParams);\n          }\n          return scope.data.today = today;\n        },\n        _getPrevMonthTailDaysArr: function(yearNum, monthNum, startDay) {\n          var i, isPrevMonthExist, prevMonthDate, prevMonthDaysCount, result;\n          result = [];\n          prevMonthDate = {\n            day: null,\n            month: null,\n            year: null\n          };\n          isPrevMonthExist = bDateUtils.sourceCheckers.month.isPrevMonthExist(yearNum, monthNum, scope.dateStoreId);\n          prevMonthDaysCount = 0;\n          if (isPrevMonthExist) {\n            prevMonthDate = bDateUtils.sourceCheckers.month.getPrevMonthObj(yearNum, monthNum, scope.dateStoreId);\n            prevMonthDaysCount = new Date(prevMonthDate.year, prevMonthDate.month, 0).getDate();\n          }\n          i = 0;\n          while (i < startDay - 1) {\n            result.unshift({\n              day: isPrevMonthExist ? prevMonthDaysCount - i : \"\",\n              month: isPrevMonthExist ? prevMonthDate.month : null,\n              year: isPrevMonthExist ? prevMonthDate.year : null,\n              isOtherMonth: true,\n              isLocked: !isPrevMonthExist\n            });\n            i++;\n          }\n          return result;\n        },\n        _getNextMonthTailDaysArr: function(yearNum, monthNum, startDay, daysCount, daysArr) {\n          var daysInWeek, expectedWeeksCount, i, isNextMonthExist, nextMonthDate, result;\n          result = [];\n          daysInWeek = 7;\n          expectedWeeksCount = Math.ceil(daysArr.length / daysInWeek);\n          if ((daysArr.length / daysInWeek) === Math.floor(daysArr.length / daysInWeek)) {\n            return result;\n          }\n          nextMonthDate = {\n            day: null,\n            month: null,\n            year: null\n          };\n          isNextMonthExist = bDateUtils.sourceCheckers.month.isNextMonthExist(yearNum, monthNum, scope.dateStoreId);\n          if (isNextMonthExist) {\n            nextMonthDate = bDateUtils.sourceCheckers.month.getNextMonthObj(yearNum, monthNum, scope.dateStoreId);\n          }\n          i = daysArr.length;\n          while (i < (expectedWeeksCount * daysInWeek)) {\n            daysArr.push({\n              day: isNextMonthExist ? i - (daysCount + startDay - 2) : \"\",\n              month: isNextMonthExist ? nextMonthDate.month : null,\n              year: isNextMonthExist ? nextMonthDate.year : null,\n              isOtherMonth: true,\n              isLocked: !isNextMonthExist\n            });\n            i++;\n          }\n          return result;\n        },\n        _getMonthDaysArr: function(yearNum, monthNum, daysCount) {\n          var i, result;\n          result = [];\n          i = 1;\n          while (i <= daysCount) {\n            result.push({\n              day: i,\n              month: monthNum,\n              year: yearNum\n            });\n            i++;\n          }\n          return result;\n        },\n        _markToday: function(daysArr) {\n          var i;\n          i = 1;\n          while (i < daysArr.length) {\n            if (daysArr[i].day === scope.data.today.day) {\n              daysArr[i].isToday = true;\n            }\n            i++;\n          }\n          return daysArr;\n        },\n        getDaysArr: function(year, month) {\n          var currentMonthDaysArr, daysCount, nextMonthTailDaysArr, prevMonthTailDaysArr, result, startDay;\n          daysCount = +month.daysTotal;\n          startDay = +month.startDay;\n          prevMonthTailDaysArr = scope.data._getPrevMonthTailDaysArr(year.number, month.number, startDay);\n          currentMonthDaysArr = scope.data._getMonthDaysArr(year.number, month.number, daysCount);\n          if (year.number === scope.data.today.year && month.number === scope.data.today.month) {\n            currentMonthDaysArr = scope.data._markToday(currentMonthDaysArr);\n          }\n          result = prevMonthTailDaysArr.concat(currentMonthDaysArr);\n          nextMonthTailDaysArr = scope.data._getNextMonthTailDaysArr(year.number, month.number, startDay, daysCount, result);\n          result = result.concat(nextMonthTailDaysArr);\n          return result;\n        },\n        goNextMonth: function(isForward) {\n          var nextObj;\n          nextObj = bDateUtils.sourceCheckers.month.getNextAvailableMonth(isForward, scope.data.viewedDate.year.number, scope.data.viewedDate.month.number, scope.dateStoreId);\n          if (nextObj) {\n            return scope.data.setViewedDate(nextObj.year, nextObj.month);\n          }\n        },\n        goNextYear: function(isForward) {\n          var nextObj;\n          nextObj = bDateUtils.sourceCheckers.year.getNextAvailableYear(isForward, scope.data.viewedDate.year.number, scope.data.viewedDate.month.number, scope.dateStoreId);\n          if (nextObj) {\n            return scope.data.setViewedDate(nextObj.year, nextObj.month);\n          }\n        },\n        init: function(dateSource) {\n          var firstYear;\n          scope.data.setFormat(dateSource.format);\n          scope.data.setToday(dateSource.today);\n          if (scope.dateModel && !angular.equals({}, scope.dateModel)) {\n            return scope.data.setViewedDate(scope.dateModel.year, scope.dateModel.month, scope.dateModel.day);\n          } else if (bDateUtils.sourceCheckers.month.isMonthExist(dateSource.today.year, dateSource.today.month, scope.dateStoreId)) {\n            return scope.data.setViewedDate(dateSource.today.year, dateSource.today.month);\n          } else {\n            firstYear = bDateUtils.sourceCheckers.year.getFirstYear(scope.dateStoreId);\n            return scope.data.setViewedDate(firstYear, bDateUtils.sourceCheckers.month.getFirstMonth(firstYear, scope.dateStoreId));\n          }\n        }\n      };\n      (function() {\n        if (bDataFactory.isDataReady(scope.dateStoreId)) {\n          scope.data.init(bDataFactory.data[scope.dateStoreId]);\n        }\n        return scope.bDateUtils = bDateUtils;\n      })();\n      scope.$watch((function() {\n        return bDataFactory.data[scope.dateStoreId];\n      }), (function() {\n        if (bDataFactory.isDataReady(scope.dateStoreId)) {\n          return scope.data.init(bDataFactory.data[scope.dateStoreId]);\n        }\n      }), true);\n      return scope.$watch('popupState.isOpen', function() {\n        if (scope.popupState.isOpen && (scope.dateModel && !angular.equals({}, scope.dateModel))) {\n          scope.data.setDateModel(scope.dateModel);\n          return scope.data.setViewedDate(scope.dateModel.year, scope.dateModel.month, scope.dateModel.day);\n        }\n      });\n    }\n  };\n}]);\n\nangular.module('bdate.utils', ['bdate.data']).factory('bDateUtils', ['MESSAGES', 'bDataFactory', function(MESSAGES, bDataFactory) {\n  var exports;\n  return exports = {\n    getDaysOfWeekShorts: function() {\n      var i, result;\n      i = 0;\n      result = [];\n      while (i < bDataFactory.daysNames.length) {\n        result.push(bDataFactory.daysNames[i].short);\n        i++;\n      }\n      return result;\n    },\n    getMonthName: function(number) {\n      return bDataFactory.monthNames[number].name;\n    },\n    makeDateModel: function(datetime) {\n      var date, day, month, year;\n      date = new Date(datetime);\n      day = date.getDate();\n      month = date.getMonth() + 1;\n      year = date.getFullYear();\n      return {\n        day: day,\n        month: month,\n        year: year\n      };\n    },\n    stringToDate: function(dateStr, format, delimiter) {\n      var dateItems, day, dayIndex, formatItems, formatLowerCase, month, monthIndex, year, yearIndex;\n      formatLowerCase = format.toLowerCase();\n      formatItems = formatLowerCase.split(delimiter);\n      dateItems = dateStr.split(delimiter);\n      monthIndex = formatItems.indexOf('mm');\n      dayIndex = formatItems.indexOf('dd');\n      yearIndex = formatItems.indexOf('yyyy');\n      year = +dateItems[yearIndex];\n      month = +dateItems[monthIndex] - 1;\n      day = +dateItems[dayIndex];\n      if (month > 12) {\n        return false;\n      }\n      if (day > 31) {\n        return false;\n      }\n      return new Date(year, month, day);\n    },\n    isValidDate: function(date) {\n      if (!angular.isDate) {\n        date = new Date(date);\n      }\n      if (isNaN(date.getTime())) {\n        return false;\n      }\n    },\n    sourceCheckers: {\n      month: {\n        isMonthExist: function(yearNum, monthNum, storeId) {\n          if (!yearNum || !monthNum) {\n            return console.error(MESSAGES.invalidParams);\n          }\n          yearNum = +yearNum;\n          monthNum = +monthNum;\n          if (!bDataFactory.isDataReady(storeId)) {\n            return false;\n          }\n          if (!bDataFactory.data[storeId].years[yearNum]) {\n            return false;\n          }\n          return !!bDataFactory.data[storeId].years[yearNum][monthNum];\n        },\n        isPrevMonthExist: function(yearNum, curMonthNum, storeId) {\n          var isFirstMonth, isFirstYear, lastMonthOfPrevYearNum, prevMonthNum, prevYearNum;\n          if (!yearNum || !curMonthNum) {\n            return false;\n          }\n          yearNum = +yearNum;\n          curMonthNum = +curMonthNum;\n          if (!exports.sourceCheckers.month.isMonthExist(yearNum, curMonthNum, storeId)) {\n            return false;\n          }\n          isFirstMonth = exports.sourceCheckers.month.isFirstMonth(yearNum, curMonthNum, storeId);\n          if (!isFirstMonth) {\n            prevMonthNum = curMonthNum - 1;\n            return exports.sourceCheckers.month.isMonthExist(yearNum, prevMonthNum, storeId);\n          } else {\n            isFirstYear = exports.sourceCheckers.year.isFirstYear(yearNum, storeId);\n            if (!isFirstYear) {\n              prevYearNum = yearNum - 1;\n              lastMonthOfPrevYearNum = exports.sourceCheckers.month.getLastMonth(prevYearNum, storeId);\n              return exports.sourceCheckers.month.isMonthExist(prevYearNum, lastMonthOfPrevYearNum, storeId);\n            } else {\n              return false;\n            }\n          }\n        },\n        getPrevMonthObj: function(yearNum, curMonthNum, storeId) {\n          var isFirstMonth, isFirstYear, lastMonthOfPrevYearNum, prevMonthNum, prevYearNum;\n          if (!yearNum || !curMonthNum) {\n            return console.error(MESSAGES.invalidParams);\n          }\n          yearNum = +yearNum;\n          curMonthNum = +curMonthNum;\n          isFirstMonth = exports.sourceCheckers.month.isFirstMonth(yearNum, curMonthNum, storeId);\n          if (!isFirstMonth) {\n            prevMonthNum = curMonthNum - 1;\n            if (exports.sourceCheckers.month.isMonthExist(yearNum, prevMonthNum, storeId)) {\n              return {\n                year: yearNum,\n                month: prevMonthNum\n              };\n            } else {\n              return null;\n            }\n          } else {\n            isFirstYear = exports.sourceCheckers.year.isFirstYear(yearNum, storeId);\n            if (!isFirstYear) {\n              prevYearNum = yearNum - 1;\n              lastMonthOfPrevYearNum = exports.sourceCheckers.month.getLastMonth(prevYearNum, storeId);\n              if (exports.sourceCheckers.month.isMonthExist(prevYearNum, lastMonthOfPrevYearNum, storeId)) {\n                return {\n                  year: prevYearNum,\n                  month: lastMonthOfPrevYearNum\n                };\n              } else {\n                return null;\n              }\n            } else {\n              return null;\n            }\n          }\n        },\n        isNextMonthExist: function(yearNum, curMonthNum, storeId) {\n          var firstMonthOfNextYearNum, isLastMonth, isLastYear, nextMonthNum, nextYearNum;\n          if (!yearNum || !curMonthNum) {\n            return false;\n          }\n          yearNum = +yearNum;\n          curMonthNum = +curMonthNum;\n          if (!exports.sourceCheckers.month.isMonthExist(yearNum, curMonthNum, storeId)) {\n            return false;\n          }\n          isLastMonth = exports.sourceCheckers.month.isLastMonth(yearNum, curMonthNum, storeId);\n          if (!isLastMonth) {\n            nextMonthNum = curMonthNum + 1;\n            return exports.sourceCheckers.month.isMonthExist(yearNum, nextMonthNum, storeId);\n          } else {\n            isLastYear = exports.sourceCheckers.year.isLastYear(yearNum, storeId);\n            if (!isLastYear) {\n              nextYearNum = yearNum + 1;\n              firstMonthOfNextYearNum = exports.sourceCheckers.month.getFirstMonth(nextYearNum, storeId);\n              return exports.sourceCheckers.month.isMonthExist(nextYearNum, firstMonthOfNextYearNum, storeId);\n            } else {\n              return false;\n            }\n          }\n        },\n        getNextMonthObj: function(yearNum, curMonthNum, storeId) {\n          var firstMonthOfNextYearNum, isLastMonth, isLastYear, nextMonthNum, nextYearNum;\n          if (!yearNum || !curMonthNum) {\n            return console.error(MESSAGES.invalidParams);\n          }\n          yearNum = +yearNum;\n          curMonthNum = +curMonthNum;\n          isLastMonth = exports.sourceCheckers.month.isLastMonth(yearNum, curMonthNum, storeId);\n          if (!isLastMonth) {\n            nextMonthNum = curMonthNum + 1;\n            if (exports.sourceCheckers.month.isMonthExist(yearNum, nextMonthNum, storeId)) {\n              return {\n                year: yearNum,\n                month: nextMonthNum\n              };\n            } else {\n              return null;\n            }\n          } else {\n            isLastYear = exports.sourceCheckers.year.isLastYear(yearNum, storeId);\n            if (!isLastYear) {\n              nextYearNum = yearNum + 1;\n              firstMonthOfNextYearNum = exports.sourceCheckers.month.getFirstMonth(nextYearNum, storeId);\n              if (exports.sourceCheckers.month.isMonthExist(nextYearNum, firstMonthOfNextYearNum, storeId)) {\n                return {\n                  year: nextYearNum,\n                  month: firstMonthOfNextYearNum\n                };\n              } else {\n                return null;\n              }\n            } else {\n              return null;\n            }\n          }\n        },\n        getMonth: function(yearNum, monthNum, storeId) {\n          if (!yearNum || !monthNum) {\n            return console.error(MESSAGES.invalidParams);\n          }\n          if (!bDataFactory.isDataReady(storeId)) {\n            return console.error(MESSAGES.dateNotReady);\n          }\n          return bDataFactory.data[storeId].years[yearNum][monthNum];\n        },\n        isFirstMonth: function(yearNum, monthNum, storeId) {\n          if (!bDataFactory.isDataReady(storeId)) {\n            return console.error(MESSAGES.dateNotReady);\n          }\n          yearNum = +yearNum;\n          monthNum = +monthNum;\n          return monthNum === +Object.keys(bDataFactory.data[storeId].years[yearNum])[0];\n        },\n        getFirstMonth: function(yearNum, storeId) {\n          if (!bDataFactory.isDataReady(storeId)) {\n            return console.error(MESSAGES.dateNotReady);\n          }\n          yearNum = +yearNum;\n          return +Object.keys(bDataFactory.data[storeId].years[yearNum])[0];\n        },\n        isLastMonth: function(yearNum, monthNum, storeId) {\n          if (!bDataFactory.isDataReady(storeId)) {\n            return console.error(MESSAGES.dateNotReady);\n          }\n          yearNum = +yearNum;\n          monthNum = +monthNum;\n          return monthNum === +Object.keys(bDataFactory.data[storeId].years[yearNum])[Object.keys(bDataFactory.data[storeId].years[yearNum]).length - 1];\n        },\n        getLastMonth: function(yearNum, storeId) {\n          if (!bDataFactory.isDataReady(storeId)) {\n            return console.error(MESSAGES.dateNotReady);\n          }\n          yearNum = +yearNum;\n          return +Object.keys(bDataFactory.data[storeId].years[yearNum])[Object.keys(bDataFactory.data[storeId].years[yearNum]).length - 1];\n        },\n        getNextAvailableMonth: function(isForward, yearNum, monthNum, storeId) {\n          var isFirstMonth, isLastMonth, nextMonthNum, nextYearNum, result;\n          yearNum = +yearNum;\n          monthNum = +monthNum;\n          isFirstMonth = exports.sourceCheckers.month.isFirstMonth(yearNum, monthNum, storeId);\n          isLastMonth = exports.sourceCheckers.month.isLastMonth(yearNum, monthNum, storeId);\n          nextYearNum = yearNum;\n          nextMonthNum = monthNum;\n          if (isForward) {\n            if (!isLastMonth) {\n              nextMonthNum = monthNum + 1;\n            } else {\n              nextYearNum = yearNum + 1;\n              if (exports.sourceCheckers.year.isYearExist(nextYearNum, storeId)) {\n                nextMonthNum = exports.sourceCheckers.month.getFirstMonth(nextYearNum, storeId);\n              } else {\n                console.error(MESSAGES.errorOnChangeMonthOrYear);\n                return false;\n              }\n            }\n          } else if (!isForward) {\n            if (!isFirstMonth) {\n              nextMonthNum = monthNum - 1;\n            } else {\n              nextYearNum = yearNum - 1;\n              if (exports.sourceCheckers.year.isYearExist(nextYearNum, storeId)) {\n                nextMonthNum = exports.sourceCheckers.month.getLastMonth(nextYearNum, storeId);\n              } else {\n                console.error(MESSAGES.errorOnChangeMonthOrYear);\n                return false;\n              }\n            }\n          }\n          return result = {\n            year: nextYearNum,\n            month: nextMonthNum\n          };\n        }\n      },\n      year: {\n        isYearExist: function(yearNum, storeId) {\n          if (!yearNum) {\n            return console.error(MESSAGES.invalidParams);\n          }\n          if (!bDataFactory.isDataReady(storeId)) {\n            return false;\n          }\n          yearNum = +yearNum;\n          return !!bDataFactory.data[storeId].years[yearNum];\n        },\n        getYear: function(yearNum, storeId) {\n          if (!yearNum) {\n            return console.error(MESSAGES.invalidParams);\n          }\n          if (!bDataFactory.isDataReady(storeId)) {\n            return console.error(MESSAGES.dateNotReady);\n          }\n          return bDataFactory.data[storeId].years[yearNum];\n        },\n        isFirstYear: function(yearNum, storeId) {\n          yearNum = +yearNum;\n          return yearNum === +Object.keys(bDataFactory.data[storeId].years)[0];\n        },\n        getFirstYear: function(storeId) {\n          if (!bDataFactory.isDataReady(storeId)) {\n            return console.error(MESSAGES.dateNotReady);\n          }\n          return +Object.keys(bDataFactory.data[storeId].years)[0];\n        },\n        isLastYear: function(yearNum, storeId) {\n          if (!bDataFactory.isDataReady(storeId)) {\n            return console.error(MESSAGES.dateNotReady);\n          }\n          yearNum = +yearNum;\n          return yearNum === +Object.keys(bDataFactory.data[storeId].years)[Object.keys(bDataFactory.data[storeId].years).length - 1];\n        },\n        getLastYear: function(storeId) {\n          if (!bDataFactory.isDataReady(storeId)) {\n            return console.error(MESSAGES.dateNotReady);\n          }\n          return +Object.keys(bDataFactory.data[storeId].years)[Object.keys(bDataFactory.data[storeId].years).length - 1];\n        },\n        getNextAvailableYear: function(isForward, yearNum, monthNum, storeId) {\n          var isFirstYear, isLastYear, nextMonthNum, nextYearNum, result;\n          yearNum = +yearNum;\n          monthNum = +monthNum;\n          isFirstYear = exports.sourceCheckers.year.isFirstYear(yearNum, storeId);\n          isLastYear = exports.sourceCheckers.year.isLastYear(yearNum, storeId);\n          nextYearNum = yearNum;\n          nextMonthNum = monthNum;\n          if (isForward) {\n            if (!isLastYear) {\n              nextYearNum = yearNum + 1;\n              if (exports.sourceCheckers.month.isMonthExist(nextYearNum, monthNum, storeId)) {\n                nextMonthNum = monthNum;\n              } else {\n                nextMonthNum = exports.sourceCheckers.month.getFirstMonth(nextYearNum, storeId);\n              }\n            } else {\n              return false;\n            }\n          } else if (!isForward) {\n            if (!isFirstYear) {\n              nextYearNum = yearNum - 1;\n              if (exports.sourceCheckers.month.isMonthExist(nextYearNum, monthNum, storeId)) {\n                nextMonthNum = monthNum;\n              } else {\n                nextMonthNum = exports.sourceCheckers.month.getFirstMonth(nextYearNum, storeId);\n              }\n            } else {\n              return false;\n            }\n          }\n          return result = {\n            year: nextYearNum,\n            month: nextMonthNum\n          };\n        }\n      }\n    }\n  };\n}]);\n\nangular.module(\"bdate.templates\", []).run([\"$templateCache\", function($templateCache) {$templateCache.put(\"bdate.html\",\"<div id={{::bRootId}} ng-class=\\\"{b_datepicker_in_progress: !isDataReady}\\\" class=\\\"b_datepicker_root {{::bRootClasses}}\\\"><input type=text id={{::bInputId}} ng-model=date.viewed ng-click=popup.togglePopup() ng-disabled=!isDataReady readonly=readonly class=\\\"b_datepicker_input {{::bInputClasses}}\\\"><button type=button ng-click=popup.togglePopup() ng-disabled=!isDataReady class=\\\"b_datepicker_button {{::bButtonClasses}}\\\">&nbsp;</button><bdate-popup id={{::bPopupId}} popup-state=popup.state date-model=date.model date-store-id={{::dateStoreId}} class={{::bPopupClasses}}></bdate-popup></div>\");\n$templateCache.put(\"popup.html\",\"<div ng-show=popupState.isOpen class=b_popup><div class=b_popup_controls><div class=b_btn_prev_container><button type=button ng-click=data.goNextYear(false) ng-disabled=\\\"!bDateUtils.sourceCheckers.year.isYearExist(data.viewedDate.year.number - 1, dateStoreId)\\\" class=\\\"b_popup_btn b_btn_prev\\\">&#9664;&#9664;</button><button type=button ng-click=data.goNextMonth(false) ng-disabled=\\\"!bDateUtils.sourceCheckers.month.isPrevMonthExist(data.viewedDate.year.number, data.viewedDate.month.number, dateStoreId)\\\" class=\\\"b_popup_btn b_btn_prev\\\">&#9664;</button></div><div ng-bind=data.viewedDate.month.name class=b_popup_month></div>&nbsp;<div ng-bind=data.viewedDate.year.number class=b_popup_year></div><div class=b_btn_next_container><button type=button ng-click=data.goNextMonth(true) ng-disabled=\\\"!bDateUtils.sourceCheckers.month.isNextMonthExist(data.viewedDate.year.number, data.viewedDate.month.number, dateStoreId)\\\" class=\\\"b_popup_btn b_btn_next\\\">&#9654;</button><button type=button ng-click=data.goNextYear(true) ng-disabled=\\\"!bDateUtils.sourceCheckers.year.isYearExist(data.viewedDate.year.number + 1, dateStoreId)\\\" class=\\\"b_popup_btn b_btn_next\\\">&#9654;&#9654;</button></div></div><table class=b_popup_days><tr><td ng-repeat=\\\"dayOfWeek in ::data.daysOfWeek.getShorts()\\\" class=b_popup_day_of_week><span ng-bind=::dayOfWeek></span></td></tr></table><table class=b_popup_weeks><tr class=b_popup_week><td ng-repeat=\\\"date in data.viewedDate.days track by $index\\\" ng-class=\\\"{b_popup_today_day_container: date.isToday}\\\" class=b_popup_day><button type=button ng-bind=date.day ng-click=popup.selectDate(date) ng-disabled=date.isLocked ng-class=\\\"{b_popup_cur_month_day: !date.isOtherMonth, b_popup_today_day: date.isToday, b_popup_selected_day: date.day == dateModel.day &amp;&amp; date.month == dateModel.month &amp;&amp; date.year == dateModel.year, b_popup_locked_day: date.isLocked}\\\" class=b_popup_day_btn></button></td></tr></table><div ng-show=\\\"bDateUtils.isMonthExist(data.today.year, data.today.month, dateStoreId)\\\" class=b_popup_today>Сегодня<button type=button ng-bind=\\\"data.today.date | date:data.format\\\" ng-click=popup.selectDate(bDateUtils.makeDateModel(data.today.date)) class=b_popup_today_btn></button></div></div>\");}]);"],"sourceRoot":"/source/"}