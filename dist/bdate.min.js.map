{"version":3,"sources":["bdate.js"],"names":["angular","module","directive","$filter","$document","$interval","restrict","templateUrl","scope","bModel","bSource","bRootClasses","bInputClasses","bButtonClasses","bPopupClasses","bMonthNames","bDaysNames","placeholder","bRefresh","controller","$scope","getModelString","setData","popupResult","state","isDataReady","data","date","$watch","newVal","oldVal","equals","dmyObj","dateTime","Date","year","month","day","getTime","format","console","warn","link","elem","processClick","viewed","model","event","clickedElem","isOpen","isOutsideClick","popupElem","popup","target","contains","$apply","hidePopup","on","togglePopup","replace","popupState","popupSource","log","selectDate","goPrevYear","isFirstYear","selected","isStart","goPrevMonth","isFirstMonth","goNextMonth","isLastMonth","isEnd","goNextYear","isLastYear","isSelectedDay","getTodayDateTime","today","isDayInSelectedMonth","num","run","$templateCache","put"],"mappings":"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","file":"bdate.min.js","sourcesContent":["angular.module('bdate', ['bdate.popup', 'bdate.templates']).directive('bdatepicker', ['$filter', '$document', '$interval', function($filter, $document, $interval) {\n  return {\n    restrict: 'E',\n    templateUrl: 'bdate.html',\n    scope: {\n      bModel: '=',\n      bSource: '=',\n      bRootClasses: '@?',\n      bInputClasses: '@?',\n      bButtonClasses: '@?',\n      bPopupClasses: '@?',\n      bMonthNames: '=?',\n      bDaysNames: '=?',\n      placeholder: '@?',\n      bRefresh: \"&\"\n    },\n    controller: ['$scope', function($scope) {\n      var getModelString, setData;\n      $scope.popupResult = null;\n      $scope.state = {\n        isDataReady: false\n      };\n      $scope.data = {\n        date: null\n      };\n      $scope.$watch('bSource', function() {\n        setData();\n        return $scope.isDataReady = true;\n      }, true);\n      $scope.$watch('popupResult', function(newVal, oldVal) {\n        if (newVal === oldVal) {\n          return;\n        }\n        if (!newVal) {\n          return;\n        }\n        if (angular.equals({}, newVal)) {\n          return;\n        }\n        return $scope.bModel = getModelString($scope.popupResult);\n      }, true);\n      getModelString = function(dmyObj) {\n        var dateTime;\n        dateTime = new Date(dmyObj.year, dmyObj.month - 1, dmyObj.day).getTime();\n        return $filter('date')(dateTime, $scope.bSource.format);\n      };\n      return setData = function() {\n        return console.warn('not implemented yet');\n      };\n    }],\n    link: function(scope, elem) {\n      var processClick;\n      scope.date = {\n        viewed: '',\n        model: {}\n      };\n      (function() {\n        return scope.bRefresh();\n      })();\n      processClick = function(event) {\n        var clickedElem, isOpen, isOutsideClick, popupElem;\n        isOpen = scope.popup.state.isOpen;\n        clickedElem = event.target;\n        popupElem = elem;\n        isOutsideClick = (popupElem !== clickedElem) && !(popupElem[0].contains(clickedElem));\n        if (isOpen && isOutsideClick) {\n          return scope.$apply(function() {\n            return scope.popup.hidePopup();\n          });\n        }\n      };\n      $document.on('click', processClick);\n      return scope.popup = {\n        state: {\n          isOpen: false\n        },\n        togglePopup: function() {\n          if (!scope.isDataReady) {\n            return;\n          }\n          return scope.popup.state.isOpen = !scope.popup.state.isOpen;\n        },\n        hidePopup: function() {\n          return scope.popup.state.isOpen = false;\n        }\n      };\n    }\n  };\n}]);\n\nangular.module('bdate.popup', ['bdate.templates']).directive('bdatePopup', function() {\n  return {\n    restrict: 'E',\n    replace: true,\n    templateUrl: 'popup.html',\n    scope: {\n      popupState: '=',\n      popupSource: '=',\n      popupResult: '='\n    },\n    link: function(scope) {\n      console.log(scope.popupSource);\n      scope.popup = {\n        hidePopup: function() {\n          return scope.popupState.isOpen = false;\n        },\n        selectDate: function(date) {\n          scope.popupResult = date;\n          return scope.popup.hidePopup();\n        },\n        goPrevYear: function() {\n          return console.warn('not implemented yet');\n        },\n        isFirstYear: function() {\n          if (!scope.popupSource || !scope.popupSource.selected) {\n            return;\n          }\n          return scope.popupSource.selected.year.isStart;\n        },\n        goPrevMonth: function() {\n          return console.warn('not implemented yet');\n        },\n        isFirstMonth: function() {\n          if (!scope.popupSource || !scope.popupSource.selected) {\n            return;\n          }\n          return scope.popupSource.selected.month.isStart;\n        },\n        goNextMonth: function() {\n          return console.warn('not implemented yet');\n        },\n        isLastMonth: function() {\n          if (!scope.popupSource || !scope.popupSource.selected) {\n            return;\n          }\n          return scope.popupSource.selected.month.isEnd;\n        },\n        goNextYear: function() {\n          return console.warn('not implemented yet');\n        },\n        isLastYear: function() {\n          if (!scope.popupSource || !scope.popupSource.selected) {\n            return;\n          }\n          return scope.popupSource.selected.year.isEnd;\n        },\n        isSelectedDay: function(day) {\n          return console.warn('not implemented yet');\n        },\n        getTodayDateTime: function() {\n          var dateTime, today;\n          if (!scope.popupSource || !scope.popupSource.today) {\n            return;\n          }\n          today = scope.popupSource.today;\n          return dateTime = new Date(today.year, today.month - 1, today.day).getTime();\n        },\n        isDayInSelectedMonth: function(date) {\n          return (date.month === scope.popupSource.selected.month.num) && date.year === scope.popupSource.selected.year.num;\n        }\n      };\n      return scope.$watch('popupSource', function() {\n        return scope.isDataReady = true;\n      }, true);\n    }\n  };\n});\n\nangular.module(\"bdate.templates\", []).run([\"$templateCache\", function($templateCache) {$templateCache.put(\"bdate.html\",\"<div ng-class=\\\"{b_datepicker_in_progress: !isDataReady}\\\" class=\\\"b_datepicker_root {{::bRootClasses}}\\\"><input type=text ng-model=bModel placeholder={{placeholder}} ng-click=popup.togglePopup() ng-disabled=!isDataReady readonly=readonly class=\\\"b_datepicker_input {{::bInputClasses}}\\\"><button type=button ng-click=popup.clear() class=\\\"b_datepicker_button {{::bButtonClasses}}\\\"></button><button type=button ng-click=popup.togglePopup() ng-disabled=!isDataReady class=\\\"b_datepicker_button b_calendar_btn {{::bButtonClasses}}\\\">&nbsp;</button><bdate-popup popup-state=popup.state popup-source=bSource popup-result=popupResult class={{::bPopupClasses}}></bdate-popup></div>\");\n$templateCache.put(\"popup.html\",\"<div ng-show=popupState.isOpen class=b_popup><div class=b_popup_controls><div class=b_btn_prev_container><button type=button ng-click=popup.goPrevYear() ng-disabled=popup.isFirstYear() class=\\\"b_popup_btn b_btn_prev\\\">&#9664; &#9664;</button><button type=button ng-click=popup.goPrevMonth() ng-disabled=popup.isFirstMonth() class=\\\"b_popup_btn b_btn_prev\\\">&#9664;</button></div><div ng-bind=popupSource.selected.month.name class=b_popup_month></div>&nbsp;<select ng-model=popup.selectViewedYear ng-options=\\\"year for year in popupSource.years\\\" ng-init=\\\"popup.selectViewedYear = popupSource.selected.year.num\\\" ng-change=popup.goToYear() class=b_popup_year></select><div class=b_btn_next_container><button type=button ng-click=goNextMonth() ng-disabled=isLastMonth() class=\\\"b_popup_btn b_btn_next\\\">&#9654;</button><button type=button ng-click=goNextYear() ng-disabled=isLastYear() class=\\\"b_popup_btn b_btn_next\\\">&#9654; &#9654;</button></div></div><table class=b_popup_days><tr><td ng-repeat=\\\"dayOfWeek in ::popupSource.week\\\" class=b_popup_day_of_week><span ng-bind=::dayOfWeek></span></td></tr></table><table class=b_popup_weeks><tr class=b_popup_week><td ng-repeat=\\\"date in popupSource.selected.dates track by $index\\\" ng-class=\\\"{b_popup_today_day_container: day.isToday}\\\" class=b_popup_day><button type=button ng-bind=date.day ng-click=popup.selectDate(date) ng-disabled=date.isDisabled ng-class=\\\"{b_popup_day_in_selected_month: popup.isDayInSelectedMonth(date), b_popup_today_day: date.isToday, b_popup_selected_day: popup.isSelectedDay(date)}\\\" class=b_popup_day_btn></button></td></tr></table><div ng-show=popupSource.today class=b_popup_today><button type=button ng-bind=\\\"popup.getTodayDateTime() | date:popupSource.format\\\" ng-click=popup.selectDate(popupSource.today) class=b_popup_today_btn></button></div></div>\");}]);"],"sourceRoot":"/source/"}